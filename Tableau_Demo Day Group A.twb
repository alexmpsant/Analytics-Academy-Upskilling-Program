<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xml:base='https://prod-uk-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Tableau_Final_Project' path='' revision='1.0' site='alexmpsanttableau' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' inline='true' name='federated.133tvty0vi8ja41fbt02j06waj94' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Group_A_covid-data_Portugal' name='excel-direct.19c4uzm16rg02p19kpqb60g7iw97'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alexm/Desktop/Analytics Academy Course/Final Project/Analytics Academy Project_July2022/Group_A_covid-data_Portugal.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.19c4uzm16rg02p19kpqb60g7iw97' name='Group_A_covid-data_Portugal' table='[&apos;Group_A_covid-data_Portugal$&apos;]' type='table'>
          <columns gridOrigin='A1:AZ736:no:A1:AZ736:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='icu_patients' ordinal='12' />
            <column datatype='real' name='icu_patients_per_million' ordinal='13' />
            <column datatype='integer' name='hosp_patients' ordinal='14' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
            <column datatype='integer' name='total_tests' ordinal='16' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='17' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='18' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='19' />
            <column datatype='real' name='positive_rate' ordinal='20' />
            <column datatype='real' name='tests_per_case' ordinal='21' />
            <column datatype='integer' name='total_vaccinations' ordinal='22' />
            <column datatype='integer' name='people_vaccinated' ordinal='23' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='24' />
            <column datatype='integer' name='total_boosters' ordinal='25' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='26' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='27' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='28' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='29' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='30' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='31' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='32' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='integer' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='41' />
            <column datatype='real' name='diabetes_prevalence' ordinal='42' />
            <column datatype='real' name='female_smokers' ordinal='43' />
            <column datatype='integer' name='male_smokers' ordinal='44' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='45' />
            <column datatype='real' name='life_expectancy' ordinal='46' />
            <column datatype='real' name='human_development_index' ordinal='47' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='48' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='49' />
            <column datatype='real' name='excess_mortality' ordinal='50' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.19c4uzm16rg02p19kpqb60g7iw97' name='Group_A_covid-data_Portugal' table='[&apos;Group_A_covid-data_Portugal$&apos;]' type='table'>
          <columns gridOrigin='A1:AZ736:no:A1:AZ736:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='icu_patients' ordinal='12' />
            <column datatype='real' name='icu_patients_per_million' ordinal='13' />
            <column datatype='integer' name='hosp_patients' ordinal='14' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
            <column datatype='integer' name='total_tests' ordinal='16' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='17' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='18' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='19' />
            <column datatype='real' name='positive_rate' ordinal='20' />
            <column datatype='real' name='tests_per_case' ordinal='21' />
            <column datatype='integer' name='total_vaccinations' ordinal='22' />
            <column datatype='integer' name='people_vaccinated' ordinal='23' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='24' />
            <column datatype='integer' name='total_boosters' ordinal='25' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='26' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='27' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='28' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='29' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='30' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='31' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='32' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='integer' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='41' />
            <column datatype='real' name='diabetes_prevalence' ordinal='42' />
            <column datatype='real' name='female_smokers' ordinal='43' />
            <column datatype='integer' name='male_smokers' ordinal='44' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='45' />
            <column datatype='real' name='life_expectancy' ordinal='46' />
            <column datatype='real' name='human_development_index' ordinal='47' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='48' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='49' />
            <column datatype='real' name='excess_mortality' ordinal='50' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AZ736:no:A1:AZ736:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Group_A_covid-data_Portugal' datatype='table' name='[__tableau_internal_object_id__].[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative' datatype='real' name='[excess_mortality_cumulative]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='real' name='[excess_mortality_cumulative_absolute]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='real' name='[excess_mortality_cumulative_per_million]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='integer' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='integer' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Total Boosters' datatype='integer' name='[total_boosters]' role='measure' type='quantitative' />
      <column caption='Total Boosters Per Hundred' datatype='real' name='[total_boosters_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column-instance column='[hosp_patients]' derivation='Max' name='[max:hosp_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='Max' name='[max:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations_smoothed]' derivation='Max' name='[max:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_rate]' derivation='Max' name='[max:positive_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_cases_smoothed]' derivation='None' name='[none:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='None' name='[none:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[excess_mortality]' derivation='Sum' name='[sum:excess_mortality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[excess_mortality_cumulative_absolute]' derivation='Sum' name='[sum:excess_mortality_cumulative_absolute:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hosp_patients]' derivation='Sum' name='[sum:hosp_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hosp_patients_per_million]' derivation='Sum' name='[sum:hosp_patients_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[human_development_index]' derivation='Sum' name='[sum:human_development_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[icu_patients]' derivation='Sum' name='[sum:icu_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Sum' name='[sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='Sum' name='[sum:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Sum' name='[sum:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_smoothed]' derivation='Sum' name='[sum:new_tests_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_smoothed_per_thousand]' derivation='Sum' name='[sum:new_tests_smoothed_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations_smoothed]' derivation='Sum' name='[sum:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reproduction_rate]' derivation='Sum' name='[sum:reproduction_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tests_per_case]' derivation='Sum' name='[sum:tests_per_case:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='Sum' name='[win:sum:new_deaths_smoothed:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_vaccinations_smoothed]' derivation='Sum' name='[win:sum:new_vaccinations_smoothed:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:median_age:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_tests_smoothed_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_tests_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_vaccinations_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:positive_rate:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:icu_patients:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[none:new_deaths_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[win:sum:new_deaths_smoothed:qk:1]&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:male_smokers:qk]&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_deaths_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_deaths_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[win:sum:new_vaccinations_smoothed:qk:1]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:hosp_patients:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[none:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:excess_mortality_cumulative_absolute:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:excess_mortality:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:hosp_patients_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:hosp_patients:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:human_development_index:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:reproduction_rate:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:tests_per_case:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:total_cases:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;US Minor Outlying Islands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Group_A_covid-data_Portugal' id='Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0'>
            <properties context=''>
              <relation connection='excel-direct.19c4uzm16rg02p19kpqb60g7iw97' name='Group_A_covid-data_Portugal' table='[&apos;Group_A_covid-data_Portugal$&apos;]' type='table'>
                <columns gridOrigin='A1:AZ736:no:A1:AZ736:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='total_cases' ordinal='3' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='4' />
                  <column datatype='integer' name='total_deaths' ordinal='5' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
                  <column datatype='real' name='total_cases_per_million' ordinal='7' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
                  <column datatype='real' name='reproduction_rate' ordinal='11' />
                  <column datatype='integer' name='icu_patients' ordinal='12' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='13' />
                  <column datatype='integer' name='hosp_patients' ordinal='14' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
                  <column datatype='integer' name='total_tests' ordinal='16' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='17' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='18' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='19' />
                  <column datatype='real' name='positive_rate' ordinal='20' />
                  <column datatype='real' name='tests_per_case' ordinal='21' />
                  <column datatype='integer' name='total_vaccinations' ordinal='22' />
                  <column datatype='integer' name='people_vaccinated' ordinal='23' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='24' />
                  <column datatype='integer' name='total_boosters' ordinal='25' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='26' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='27' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='28' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='29' />
                  <column datatype='real' name='total_boosters_per_hundred' ordinal='30' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='31' />
                  <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='32' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='33' />
                  <column datatype='real' name='stringency_index' ordinal='34' />
                  <column datatype='integer' name='population' ordinal='35' />
                  <column datatype='real' name='population_density' ordinal='36' />
                  <column datatype='real' name='median_age' ordinal='37' />
                  <column datatype='real' name='aged_65_older' ordinal='38' />
                  <column datatype='real' name='aged_70_older' ordinal='39' />
                  <column datatype='real' name='gdp_per_capita' ordinal='40' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='41' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='42' />
                  <column datatype='real' name='female_smokers' ordinal='43' />
                  <column datatype='integer' name='male_smokers' ordinal='44' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='45' />
                  <column datatype='real' name='life_expectancy' ordinal='46' />
                  <column datatype='real' name='human_development_index' ordinal='47' />
                  <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='48' />
                  <column datatype='real' name='excess_mortality_cumulative' ordinal='49' />
                  <column datatype='real' name='excess_mortality' ordinal='50' />
                  <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='51' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' inline='true' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Group_A_covid-data_World' name='excel-direct.0pvtlua0lf3brm15boxf21jf3fwc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alexm/Desktop/Analytics Academy Course/Final Project/Analytics Academy Project_July2022/Group_A_covid-data_World.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0pvtlua0lf3brm15boxf21jf3fwc' name='Group_A_covid-data_World' table='[&apos;Group_A_covid-data_World$&apos;]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='real' name='total_cases_per_million' ordinal='5' />
            <column datatype='integer' name='total_deaths' ordinal='6' />
            <column datatype='real' name='total_deaths_per_million' ordinal='7' />
            <column datatype='real' name='gdp_per_capita' ordinal='8' />
            <column datatype='integer' name='population' ordinal='9' />
            <column datatype='real' name='population_density' ordinal='10' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='11' />
            <column datatype='real' name='life_expectancy' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0pvtlua0lf3brm15boxf21jf3fwc' name='Group_A_covid-data_World' table='[&apos;Group_A_covid-data_World$&apos;]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='real' name='total_cases_per_million' ordinal='5' />
            <column datatype='integer' name='total_deaths' ordinal='6' />
            <column datatype='real' name='total_deaths_per_million' ordinal='7' />
            <column datatype='real' name='gdp_per_capita' ordinal='8' />
            <column datatype='integer' name='population' ordinal='9' />
            <column datatype='real' name='population_density' ordinal='10' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='11' />
            <column datatype='real' name='life_expectancy' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Group_A_covid-data_World' datatype='table' name='[__tableau_internal_object_id__].[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
        </semantic-values>
      </column>
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Attribute' name='[attr:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Avg' name='[cum:avg:total_cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[cum:max:total_cases:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[continent]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[cum:max:total_cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[cum:max:total_cases:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[cum:max:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[date]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_deaths_per_million]' derivation='Max' name='[cum:max:total_deaths_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Min' name='[cum:min:total_cases_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[date]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[cum:sum:total_cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[date]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[cum:sum:total_cases:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[cum:sum:total_cases:qk:5]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[continent]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[cum:sum:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[continent]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk:5]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[date]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[total_cases]' derivation='Avg' name='[win:avg:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[win:sum:total_cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='CellInPane' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[win:sum:total_cases:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[continent]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[win:sum:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Continent,MONTH(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:continent:nk]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[attr:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:avg:total_cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_cases:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_cases:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:min:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases_per_million:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases_per_million:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases_per_million:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[win:avg:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[win:sum:total_cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[win:sum:total_cases:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[win:sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[sum:total_cases_per_million:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' palette='brown_10_0' type='palette'>
            <map to='#9f3632'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#b85536'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c7784c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#dc9856'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e9b97a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Group_A_covid-data_World' id='Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41'>
            <properties context=''>
              <relation connection='excel-direct.0pvtlua0lf3brm15boxf21jf3fwc' name='Group_A_covid-data_World' table='[&apos;Group_A_covid-data_World$&apos;]' type='table'>
                <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='real' name='total_cases_per_million' ordinal='5' />
                  <column datatype='integer' name='total_deaths' ordinal='6' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='7' />
                  <column datatype='real' name='gdp_per_capita' ordinal='8' />
                  <column datatype='integer' name='population' ordinal='9' />
                  <column datatype='real' name='population_density' ordinal='10' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='11' />
                  <column datatype='real' name='life_expectancy' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Group_A_covid-data_Europe (Group_A_covid-data_Europe)' inline='true' name='federated.1xzlpxw1055pqb170ee2c09m11sg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Group_A_covid-data_Europe' name='excel-direct.1oqyezf132s5lm1cp3rih06htq0c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alexm/Desktop/Analytics Academy Course/Final Project/Analytics Academy Project_July2022/Group_A_covid-data_Europe.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1oqyezf132s5lm1cp3rih06htq0c' name='Group_A_covid-data_Europe' table='[&apos;Group_A_covid-data_Europe$&apos;]' type='table'>
          <columns gridOrigin='A1:AH10001:no:A1:AH10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='icu_patients' ordinal='12' />
            <column datatype='real' name='icu_patients_per_million' ordinal='13' />
            <column datatype='integer' name='hosp_patients' ordinal='14' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
            <column datatype='real' name='tests_per_case' ordinal='16' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='17' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='18' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='19' />
            <column datatype='real' name='stringency_index' ordinal='20' />
            <column datatype='integer' name='population' ordinal='21' />
            <column datatype='real' name='population_density' ordinal='22' />
            <column datatype='real' name='median_age' ordinal='23' />
            <column datatype='real' name='aged_65_older' ordinal='24' />
            <column datatype='real' name='aged_70_older' ordinal='25' />
            <column datatype='real' name='gdp_per_capita' ordinal='26' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='27' />
            <column datatype='real' name='diabetes_prevalence' ordinal='28' />
            <column datatype='real' name='female_smokers' ordinal='29' />
            <column datatype='real' name='male_smokers' ordinal='30' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
            <column datatype='real' name='life_expectancy' ordinal='32' />
            <column datatype='real' name='human_development_index' ordinal='33' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1oqyezf132s5lm1cp3rih06htq0c' name='Group_A_covid-data_Europe' table='[&apos;Group_A_covid-data_Europe$&apos;]' type='table'>
          <columns gridOrigin='A1:AH10001:no:A1:AH10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='icu_patients' ordinal='12' />
            <column datatype='real' name='icu_patients_per_million' ordinal='13' />
            <column datatype='integer' name='hosp_patients' ordinal='14' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
            <column datatype='real' name='tests_per_case' ordinal='16' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='17' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='18' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='19' />
            <column datatype='real' name='stringency_index' ordinal='20' />
            <column datatype='integer' name='population' ordinal='21' />
            <column datatype='real' name='population_density' ordinal='22' />
            <column datatype='real' name='median_age' ordinal='23' />
            <column datatype='real' name='aged_65_older' ordinal='24' />
            <column datatype='real' name='aged_70_older' ordinal='25' />
            <column datatype='real' name='gdp_per_capita' ordinal='26' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='27' />
            <column datatype='real' name='diabetes_prevalence' ordinal='28' />
            <column datatype='real' name='female_smokers' ordinal='29' />
            <column datatype='real' name='male_smokers' ordinal='30' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
            <column datatype='real' name='life_expectancy' ordinal='32' />
            <column datatype='real' name='human_development_index' ordinal='33' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AH10001:no:A1:AH10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Group_A_covid-data_Europe' datatype='table' name='[__tableau_internal_object_id__].[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='integer' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Attribute' name='[attr:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[avg:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Avg' name='[avg:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Avg' name='[avg:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Count' name='[cnt:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='CountD' name='[ctd:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[cum:avg:hospital_beds_per_thousand:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1xzlpxw1055pqb170ee2c09m11sg].[location]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[cum:avg:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[cum:sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1xzlpxw1055pqb170ee2c09m11sg].[location]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[population_density]' derivation='Sum' name='[cum:sum:population_density:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[population_density]' derivation='Sum' name='[cum:sum:population_density:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='Max' name='[max:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Max' name='[max:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Median' name='[med:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='None' name='[none:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='None' name='[none:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='None' name='[none:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='None' name='[none:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Sum' name='[rank:sum:population_density:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[hosp_patients_per_million]' derivation='Sum' name='[sum:hosp_patients_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Sum' name='[sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='Sum' name='[sum:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Sum' name='[sum:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Sum' name='[sum:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Max' name='[win:max:new_cases_smoothed:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[ctd:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[avg:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:avg:hospital_beds_per_thousand:qk:2]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:avg:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:hosp_patients_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[win:max:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[attr:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[avg:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[avg:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cnt:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:sum:population_density:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[med:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[rank:sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;US Minor Outlying Islands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
        <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
        <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Group_A_covid-data_Europe' id='Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86'>
            <properties context=''>
              <relation connection='excel-direct.1oqyezf132s5lm1cp3rih06htq0c' name='Group_A_covid-data_Europe' table='[&apos;Group_A_covid-data_Europe$&apos;]' type='table'>
                <columns gridOrigin='A1:AH10001:no:A1:AH10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='total_cases' ordinal='3' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='4' />
                  <column datatype='integer' name='total_deaths' ordinal='5' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
                  <column datatype='real' name='total_cases_per_million' ordinal='7' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
                  <column datatype='real' name='reproduction_rate' ordinal='11' />
                  <column datatype='integer' name='icu_patients' ordinal='12' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='13' />
                  <column datatype='integer' name='hosp_patients' ordinal='14' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
                  <column datatype='real' name='tests_per_case' ordinal='16' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='17' />
                  <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='18' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='19' />
                  <column datatype='real' name='stringency_index' ordinal='20' />
                  <column datatype='integer' name='population' ordinal='21' />
                  <column datatype='real' name='population_density' ordinal='22' />
                  <column datatype='real' name='median_age' ordinal='23' />
                  <column datatype='real' name='aged_65_older' ordinal='24' />
                  <column datatype='real' name='aged_70_older' ordinal='25' />
                  <column datatype='real' name='gdp_per_capita' ordinal='26' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='27' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='28' />
                  <column datatype='real' name='female_smokers' ordinal='29' />
                  <column datatype='real' name='male_smokers' ordinal='30' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
                  <column datatype='real' name='life_expectancy' ordinal='32' />
                  <column datatype='real' name='human_development_index' ordinal='33' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_847A5C9FD94147A9A78D763164F1951C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases vs Vacc(PT)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Vaccinations vs New Cases (Portugal)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_vaccinations_smoothed]' derivation='Max' name='[max:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' included-values='in-range' />
          <slices>
            <column>[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]</column>
            <column>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#f28e2b' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Omicron: &lt;Computation&gt;' label-type='custom' scope='per-table' tooltip-type='none' value='#2021-11-29 00:00:00#' value-column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' z-order='1' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_cases_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='134' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.133tvty0vi8ja41fbt02j06waj94].[max:new_cases_smoothed:qk] + [federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk])</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{B529C2D7-94D9-4563-8717-164B6DC36A2D}' />
    </worksheet>
    <worksheet name='Corr (EU)2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Corr. Population Density  vs Cases per Million (Europe EU)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Europe (Group_A_covid-data_Europe)' name='federated.1xzlpxw1055pqb170ee2c09m11sg' />
          </datasources>
          <datasource-dependencies datasource='federated.1xzlpxw1055pqb170ee2c09m11sg'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population_density]' derivation='Max' name='[max:population_density:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malta&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]' />
              <lod column='[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:population_density:qk]</rows>
        <cols>[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:new_cases_smoothed:qk]</cols>
      </table>
      <simple-id uuid='{528B4678-C754-468D-B4E5-CCB747A990D3}' />
    </worksheet>
    <worksheet name='Corr.(EU)1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Corr. Gdp Per Capita vs New Cases (Europe EU)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Europe (Group_A_covid-data_Europe)' name='federated.1xzlpxw1055pqb170ee2c09m11sg' />
          </datasources>
          <datasource-dependencies datasource='federated.1xzlpxw1055pqb170ee2c09m11sg'>
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Max' name='[max:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases_smoothed_per_million]' derivation='Max' name='[max:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffaa00' />
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:new_cases_smoothed_per_million:qk]</rows>
        <cols>[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:gdp_per_capita:qk]</cols>
      </table>
      <simple-id uuid='{43FA2A97-52F9-4853-8F5E-DAE7440776EB}' />
    </worksheet>
    <worksheet name='Deaths vs Vacc(PT)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Vaccinations vs New Deaths (Portugal)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_deaths_smoothed]' derivation='Max' name='[max:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_vaccinations_smoothed]' derivation='Max' name='[max:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
            <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
            <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#f28e2b' />
            <format attr='stroke-size' id='refline0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Omicron: &lt;Value&gt;' label-type='custom' scope='per-table' value='#2021-11-29 00:00:00#' value-column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' z-order='1' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_deaths_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.133tvty0vi8ja41fbt02j06waj94].[max:new_deaths_smoothed:qk] + [federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk])</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{E5B4BBB1-8CE3-4FA8-B4F7-0332BEB0F4D6}' />
    </worksheet>
    <worksheet name='Forecast(PT1)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forecasting - New Cases (Portugal)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_cases_smoothed]' derivation='Sum' forecast-column-base='[sum:new_cases_smoothed:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases_smoothed]' derivation='Sum' name='[sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' included-values='in-range'>
            <min>#2020-03-01 00:00:00#</min>
            <max>#2022-03-05 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]' field-type='quantitative' major-origin='#2021-08-16 12:00:00#' major-spacing='1.0' major-units='years' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_cases_smoothed:qk]' field-type='quantitative' max='2080557.3826031249' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#ffaa00' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[none:Forecast Indicator:nk]' />
              <text column='[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_cases_smoothed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_cases_smoothed:qk]</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A6751637-2CED-4DFB-993D-F6C5380DBE7B}' />
    </worksheet>
    <worksheet name='Forecast(PT2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forecasting - New Deaths (Portugal)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_deaths_smoothed]' derivation='Sum' forecast-column-base='[sum:new_deaths_smoothed:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
            <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths_smoothed]' derivation='Sum' name='[sum:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]' included-values='in-range' />
          <slices>
            <column>[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_deaths_smoothed:qk]' field-type='quantitative' max='5293.7142029812121' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_deaths_smoothed:qk]' />
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_deaths_smoothed:qk]</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A06E0F33-FED7-4F01-A0C0-C9A953122440}' />
    </worksheet>
    <worksheet name='P.rate vs Patientes(EU)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Positive rate vs Hosp Patients (Europe EU)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
            <column-instance column='[hosp_patients]' derivation='Max' name='[max:hosp_patients:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_rate]' derivation='Max' name='[max:positive_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:hosp_patients:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.133tvty0vi8ja41fbt02j06waj94].[max:hosp_patients:qk] + [federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk])</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{AC34D547-7E07-4193-AA65-6A66E48540C6}' />
    </worksheet>
    <worksheet name='Running Total Cases_W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases (per million) Growth -  Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' />
              <text column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:qk]</cols>
        <pages>
          <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-color='#f28e2b' mark-color-auto='false' mark-type='all' start='28' trail-effect='none' />
      </table>
      <simple-id uuid='{3F195300-9631-41A0-8BA9-9FCE9F4F6E2F}' />
    </worksheet>
    <worksheet name='Running Total Deaths_W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths (per million) Growth -  Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[cum:max:total_deaths_per_million:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' />
              <text column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_deaths_per_million:qk]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:qk]</cols>
        <pages>
          <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-color='#f28e2b' mark-color-auto='false' mark-type='all' start='28' trail-effect='none' />
      </table>
      <simple-id uuid='{CFA1DF34-5834-4F9B-AC0A-B6E92E8236D8}' />
    </worksheet>
    <worksheet name='Top10_cases(pm)_W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 countries (Cases per Million)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='None' name='[none:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_847A5C9FD94147A9A78D763164F1951C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]' included-values='in-range'>
            <min>382502.0</min>
            <max>496858.598</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</column>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{887200D6-66CB-4CFD-A76D-2DE96781E8B0}' />
    </worksheet>
    <worksheet name='Top10_deaths(pm)_W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 countries (Deaths per Million)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths_per_million]' derivation='None' name='[none:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_847A5C9FD94147A9A78D763164F1951C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]' included-values='in-range'>
            <min>3412.0</min>
            <max>6322.2629999999999</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</column>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{17AE4706-88D8-452E-A1D7-41822FDC60DE}' />
    </worksheet>
    <worksheet name='Total_cases(pm)_W_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases per Million - Worldwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='None' name='[none:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_847A5C9FD94147A9A78D763164F1951C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]' included-values='all' />
          <slices>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</column>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]' field-type='quantitative' max='30581472.707345001' min='-23144138.143050693' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]' field-type='quantitative' max='12718585.506073151' min='-8520234.090090245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]' />
              <color column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' />
              <geometry column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B58AE4AC-6674-43AC-843F-78528BC45DC8}' />
    </worksheet>
    <worksheet name='Total_deaths(pm)_W_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Million - Wordwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths_per_million]' derivation='None' name='[none:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_847A5C9FD94147A9A78D763164F1951C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]' included-values='all' />
          <slices>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</column>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]' field-type='quantitative' max='30581472.707345001' min='-23144138.143050693' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]' field-type='quantitative' max='12718585.506073151' min='-8520234.090090245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]' />
              <color column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' />
              <geometry column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D55D7092-6DD1-4293-BECD-18488B691BCC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='89378' x='483' y='940'>
              <zone h='49058' id='3' name='Running Total Cases_W' w='89378' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49062' id='10' name='Running Total Deaths_W' w='89378' x='483' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
              <zone h='18331' id='8' name='Running Total Cases_W' pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' type-v2='color' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone count='1' h='13983' id='9' name='Running Total Cases_W' name1='Running Total Deaths_W' synchronized='1' type-v2='currpage' w='9656' x='89861' y='19271'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='94' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='93' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='49058' id='3' is-fixed='true' name='Running Total Cases_W' w='89378' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18331' id='8' name='Running Total Cases_W' pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49062' id='10' is-fixed='true' name='Running Total Deaths_W' w='89378' x='483' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='13983' id='9' name='Running Total Cases_W' name1='Running Total Deaths_W' synchronized='1' type-v2='currpage' w='9656' x='89861' y='19271'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAFE8D49-FE1B-4937-9AD3-0782FB02316A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89307' id='106' param='horz' type-v2='layout-flow' w='99034' x='483' y='9753'>
            <zone h='89307' id='50' param='vert' type-v2='layout-flow' w='99034' x='483' y='9753'>
              <zone h='89307' id='16' param='horz' type-v2='layout-flow' w='99034' x='483' y='9753'>
                <zone h='89307' id='5' type-v2='layout-basic' w='99034' x='483' y='9753'>
                  <zone h='44649' id='3' name='Total_cases(pm)_W_map' w='49517' x='483' y='9753'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44658' id='8' name='Total_deaths(pm)_W_map' w='49517' x='483' y='54402'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44649' id='11' name='Top10_cases(pm)_W' w='49517' x='50000' y='9753'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44658' id='14' name='Top10_deaths(pm)_W' w='49517' x='50000' y='54402'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='8813' id='108' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='8813' id='107' name='Total_cases(pm)_W_map' pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' type-v2='color' w='49517' x='483' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='8813' id='109' name='Total_deaths(pm)_W_map' pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' type-v2='color' w='49517' x='50000' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='113' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='112' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='44649' id='3' is-fixed='true' name='Total_cases(pm)_W_map' w='49517' x='483' y='9753'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8813' id='107' name='Total_cases(pm)_W_map' pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' type-v2='color' w='49517' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44649' id='11' is-fixed='true' name='Top10_cases(pm)_W' w='49517' x='50000' y='9753'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44658' id='8' is-fixed='true' name='Total_deaths(pm)_W_map' w='49517' x='483' y='54402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8813' id='109' name='Total_deaths(pm)_W_map' pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' type-v2='color' w='49517' x='50000' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44658' id='14' is-fixed='true' name='Top10_deaths(pm)_W' w='49517' x='50000' y='54402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D515D7DC-3643-4626-A921-705E2BF2BA2E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='68' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='88895' x='483' y='940'>
              <zone h='98120' id='5' type-v2='layout-basic' w='88895' x='483' y='940'>
                <zone h='98120' id='3' name='P.rate vs Patientes(EU)' w='88895' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='168' h='98120' id='67' is-fixed='true' param='vert' type-v2='layout-flow' w='10139' x='89378' y='940'>
              <zone h='8461' id='69' name='P.rate vs Patientes(EU)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='10139' x='89378' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='93' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='92' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98120' id='3' is-fixed='true' name='P.rate vs Patientes(EU)' w='88895' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='69' name='P.rate vs Patientes(EU)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='10139' x='89378' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8FF5DAE2-9106-4733-9434-FB0E04FA46B7}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='99034' x='483' y='940'>
              <zone h='49060' id='9' name='Corr.(EU)1' w='99034' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='10' name='Corr (EU)2' w='99034' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='90' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='89' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49060' id='9' is-fixed='true' name='Corr.(EU)1' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='10' is-fixed='true' name='Corr (EU)2' w='99034' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{854B6B76-0E78-48A9-A541-39EF93DE935E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='73' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='99034' x='483' y='940'>
              <zone h='49060' id='3' name='Cases vs Vacc(PT)' w='89674' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='9' name='Deaths vs Vacc(PT)' w='89674' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='75' name='Deaths vs Vacc(PT)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9360' x='90157' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='74' name='Cases vs Vacc(PT)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9360' x='90157' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='99' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='98' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49060' id='3' is-fixed='true' name='Cases vs Vacc(PT)' w='89674' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49060' id='74' name='Cases vs Vacc(PT)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9360' x='90157' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='9' is-fixed='true' name='Deaths vs Vacc(PT)' w='89674' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49060' id='75' name='Deaths vs Vacc(PT)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9360' x='90157' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FB8A4822-83A7-4CAC-9807-F9981B29F4C4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 6'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='17' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='99034' x='483' y='940'>
              <zone h='49060' id='15' name='Forecast(PT1)' w='99034' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='19' name='Forecast(PT2)' w='99034' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='95' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='94' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49060' id='15' is-fixed='true' name='Forecast(PT1)' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='19' is-fixed='true' name='Forecast(PT2)' w='99034' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3B384A8D-766D-4A4A-88BC-B166AC697E40}' />
    </dashboard>
    <dashboard name='Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>The COVID-19 Data Visualization and Story Telling</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='338' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='4935' id='3' type-v2='title' w='99034' x='483' y='940' />
            <zone fixed-size='90' h='10576' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='5875' />
            <zone h='82609' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='16451'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Cases and deaths per Continent (time series)' captured-sheet='Dashboard 1' id='2'>
                    <capturedDeltas>
                      <worksheet name='Running Total Cases_W'>
                        <current-page>
                          <multibucket>
                            <bucket>#2020-01-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                      <worksheet name='Running Total Deaths_W'>
                        <current-page>
                          <multibucket>
                            <bucket>#2020-01-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Top 10 countries (Cases and Deaths)' captured-sheet='Dashboard 2' id='1'>
                    <capturedDeltas>
                      <worksheet name='Total_cases(pm)_W_map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Correlation (European Union)' captured-sheet='Dashboard 4' id='5' />
                  <story-point caption='Influence of vaccination over new cases and deaths (Portugal)' captured-sheet='Dashboard 5' id='7'>
                    <capturedDeltas>
                      <worksheet name='Deaths vs Vacc(PT)'>
                        <highlight field='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]'>
                          <color-one-way>
                            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
                          </color-one-way>
                          <bucket-selection>
                            <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]&quot;</bucket>
                          </bucket-selection>
                        </highlight>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E4CC7D4A-F364-49B3-B576-843E559D0F6C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='Running Total Cases_W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-03-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79D60B7E-FFF6-4E4F-BD1E-1A51E220DE46}' />
    </window>
    <window class='worksheet' name='Running Total Deaths_W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-03-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33333698-B0FA-46E1-873E-FB472E7A5237}' />
    </window>
    <window class='worksheet' name='Total_cases(pm)_W_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11C2537-F43D-4A94-BC6F-B2D2CE1850EE}' />
    </window>
    <window class='worksheet' name='Total_deaths(pm)_W_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D52C089D-A1FA-4AAA-A2B3-530320B3CDBC}' />
    </window>
    <window class='worksheet' name='Top10_cases(pm)_W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]' type='filter' />
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3306A115-3181-4D92-A5DF-1A98BBFC9D0E}' />
    </window>
    <window class='worksheet' name='Top10_deaths(pm)_W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF5C5FFC-6569-4EA6-B1A0-3843BBC2F4F3}' />
    </window>
    <window class='worksheet' name='P.rate vs Patientes(EU)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[twk:date:qk]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A8E783A-BD80-4162-9DBF-1B852198172B}' />
    </window>
    <window class='worksheet' name='Corr.(EU)1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[none:location:nk]</field>
            <field>[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F1C0EBD-C9CE-42BE-AFAA-68DAB791B375}' />
    </window>
    <window class='worksheet' name='Corr (EU)2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D9AAEEC-D6A3-421D-BCB1-4CCAEDF58E1B}' />
    </window>
    <window class='worksheet' name='Cases vs Vacc(PT)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[twk:date:qk]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E90AE271-D8A4-4108-9A61-85358124815D}' />
    </window>
    <window class='worksheet' name='Deaths vs Vacc(PT)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[twk:date:qk]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B569383-FCF6-432F-8B7A-4A2BD9CCE910}' />
    </window>
    <window class='worksheet' name='Forecast(PT1)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.133tvty0vi8ja41fbt02j06waj94].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4AFBBFBA-BFF3-4456-8AB7-C829E1E3A42D}' />
    </window>
    <window class='worksheet' name='Forecast(PT2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.133tvty0vi8ja41fbt02j06waj94].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{199317B6-7F3E-4027-9368-6BE8B6CA2A4E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Running Total Cases_W'>
          <current-page>
            <multibucket>
              <bucket>#2022-02-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Running Total Deaths_W'>
          <current-page>
            <multibucket>
              <bucket>#2022-02-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7877F109-17DE-45FC-BE7E-7292E2171AC9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Top10_cases(pm)_W'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top10_deaths(pm)_W'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total_cases(pm)_W_map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total_deaths(pm)_W_map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{58EA3CDE-D720-484A-862D-54C0EB880FA9}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='P.rate vs Patientes(EU)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{533C54A1-31BE-4EE6-BBBC-85DCFC9A73B1}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Corr (EU)2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corr.(EU)1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{48EC168F-ECD8-45A3-A00F-E32C7FF4A63D}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='Cases vs Vacc(PT)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Deaths vs Vacc(PT)'>
          <zoom type='entire-view' />
          <highlight field='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]'>
            <color-one-way>
              <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_deaths_smoothed:qk]&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E9EAA86A-2333-4F4E-A35C-41AE598F88FF}' />
    </window>
    <window class='dashboard' name='Dashboard 6'>
      <viewpoints>
        <viewpoint name='Forecast(PT1)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forecast(PT2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{72B6D4E5-9735-40E3-9F27-77A1F7326959}' />
    </window>
    <window class='dashboard' maximized='true' name='Story'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{78937C25-5D23-49F2-A6C4-87FCD3588036}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases vs Vacc(PT)' width='192'>
      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
      8YnCQJ/5/wHonNuiHau9iAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Corr (EU)2' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Corr.(EU)1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      H6H4Ebn+wCYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2915NdR5rg9zvmen/rlnewhCEszZBNtt12u21mFDu7Mhv7oFBICr3rH5hn
      vUiPilAoFBuKlUa7w56Z3mF3L12TTdMASXigCuXtdXXren9c6uEWigBxC6gqFIoEKn8PwKl7
      TmZ+55z8Tn6Z+eWXihBCIJEcUNRvWgCJ5JtEKoDkQCMVQHKgkQogOdBIBZAcaB5QgNJ6hvR6
      CYB8LoezzUysdp18qQaAbTTJFyvbSteqFVkv1R95jRACx+kMVGVXk5h7PGjlWAbTs/MIwGzX
      KVUa208sBOuZVW7cmsCwtvu0ujN760tSxTqzk7e4cuUq2Xz50XI7uyjPbjI1u8Td65+zVmnt
      UtLniwcUYPr6l7z9wccIAde++BwTEI6DYZoIIbBtGwDLshACHNtGCFAUwceffAbA3K0vyFYt
      HNvGMAzujbLaloVl2YiN9JZloygqqqrgODa2bWFaFgIeSNvI3OXdS5NYlo2maQAI4WyeF8LB
      tm0Mw9z82zCMzQriOA6OELAhv+NsnN+Qy2yU+Pv/+Lck8zXqhWUmZjMIITDNTh6O42wooY3j
      dPK/p5CLd68zv9bg1LExmq32A3ILITANA9t2Hrj/jkwPPhthG0ws5hiK+bgxMctLL13gzqUP
      WKuZOI6NufH8HcdGCIFlWfzT2/+0eZ+24wBio6zOedM0cYT46n4dAXaLuYUkL7x4hksff4wc
      /wb9/j8UReW1MyNcvr0AgHAs3n/3XeI9ceqOl3J6gZ//+lf8n//b/8Kv/vv/mVufvsfPfvFL
      NHcQl93AdASzqRI/eynOwvQE1UaTfMXgzKE4txZy9PbESQRV7i7n6e2JMxy2mSqHqC9+QXT4
      OKm5Gb7/679ifWGKeqtNoW5zJNQkuVInOR5n/tZVXuv/F3z83u+J9w2TLVR484U4f3cpyblx
      P3XiqLVVfLEBIrEejo6PUFyZZLLg5tVjET66sgD1DH0jh+gdGGW4Pw7Axdff5Nrlz/jexVEA
      bn75GYbqI5td5+RwkFrwKPW5T6l4DnE83MTqO83J4RgTsyv87Fd/ia6AG5iZvE291aJQd0i4
      DeqKn0gkylhM45Oby/jsCuMXvs/k5fcYGjtM//AhBhJRSquTREdP3v8miIb8NOoVfv/RZQb7
      e2irAfTyAnPrJomBQTKpNHfvTjM6EOWzm4v88iev84f//AEXTwxzZ6WIz8gROvY9etQi+XKd
      1WyRX/7wAgCqy4/uNDBtgVtTnn4t+xbzUB+g/8hZ8gu3sACrnWdppYhQdKqlAidH49yamObF
      7/yAhclbKC4/957fqcN9TM4uongjaFhks2tYNmTSaSan5nj9zTc5f/Y009PzfOfNNzh35hTq
      Rlrd4+PMufOM98ZoWAaZzBqWA9l0isHBIcYPH2d8eGBDQoOm5ebChQvQqmEDh4+d4vyF89RL
      BRKJBPV6HVXt6HZ89ASl1Cx3btzi3EsX6InHaDQaaLr21UNw+Tja52MmWQRgcmoWFYGwmiQO
      nSQ5dxfLk8BtFVnKVTkyEAXY/NJ3/rA25FbIplP0JBK0mw1QFO5cvYk75CMYCZFeTRGPRWk0
      Wmh6R8bCeoF4ogeAanGNq1ev4ht8gWB1mcSxC7z0ymsUM8vYls3FN3/CT773HYZHRzl37gw+
      zwPfMCamFvn+97/L0fFhHEeQzWQxTItsNvPAdW5dw3xCs+15oEsnWOHNV0/zyed30FwRojE/
      J068wIsnjzN+8kX++PbbnH7pL0hPfU5i5OhmqvETZ/jot3/L+IkzYDbJVgzGhvs654b7mJ5Z
      JLe2xvBQgunZJXJrazjd2mCrznrNZnSgFyHAFYzQKK3RahsbF7gQZo1KtULbUdC+ltwXinHx
      /DluXr/SuRtVp9cPk7k2A2EXsb4Rzp1+gStfXnkg3amLr3H36iUcoD8RZ2D0COfPn8MfiGIW
      ZnGF+gm5BMW2uvnVPHviEJev3qZSylMsrH8lN6C6/Vy4eIGZiZuMHhkF4eXYsZMcGR8gMTjK
      mVPH+OLzLwHo6etlPbsGQCjWx8svv8yp44cJD4ySW5ymsLaKyx9Dc7mIR8MABF0KuVIVRXNh
      GW3WUqvUWib9PUFmF5NkMhkEgtVMjqOHRhFfM3gMy8btkmMgiPuolorCsIUQjiOWl5aELYRo
      1spiYmJS1FuGEI4jVleTQgghcpmUaJv2/clFcmVZ3Pspn02J5WRWFItFIYQQmeSSWE5mhCOE
      yKwuiuVUVpituqjUW6JcKgrbEaJWLou2ZYtcelWspNc202ZTyyK1lhflYlFYjiPMdkNMTt4V
      TcMSVrsuyvWWcBxLFEsVYbRqYmJiQlQb7U25jGZVZPMlIYQQtXJBTExOibZpCSGEsC1DlCpV
      IYQQxVxGlGpN4diWmJ2+KzK5Tvn5tYyot03RqpdFrlh54J6L61lxd3pOmLbzgNy2aYipyQmR
      L9eEEEKspVfE9NyisB0hKsV1MXF3Wpi2I4QQwrEN8Y+//SfhCEfk84UH8q+W8mJ6dkHYjiOq
      5aIwOmILy2iJqbtTom3aIptcEslMThSLJWGahlicmxFf/OkdMblSFJViTswtrohCsSiEbYpi
      qSKsVln89vfvC4kQihDSF+jbwNLUTVx9xxiK+Z8on0o+y8ziKprHz7kXT6IqD9v4Uzev0nv0
      DPGA+4nKeh6QCiA50EgjUHKg2RxCEEJQq9X2LGPLstB1/fEXSiTfIE/NBKpWq4RCoaeRtUSy
      Z0gTSHKgkQogOdBIBZAcaKQCSA40UgEkBxqpAJIDjVQAyYFm1zNVmeQyDVtjqCdEtlBjoDeC
      ontpNZqEw8G9lFEieWrsUgEE6XSK/tFjrCQzREMeVpZXqJsKhw4d2vST39WyPYlkH9mdAgh4
      8dxLzE5Po3m8aKqKcBxMwwHlq4Ui0s9O8m1n1ybQejZFMN5LT9BNplBjdGyUMZefeq2K6veg
      qurmGl6J5NuK9AWSHGjkKJDkQCMVQHKgkQogOdBIBZAcaLqOAgnH5o9/+EfKlht/KMbPf/Tm
      fsslkewLXVsARdV49aUzhBMjYLX3WyaJZN/Y0gQK9h0lrDU5e/bsfsojkewrWypAJT3NnZUi
      i/PTXc8L22Q1laFRLTG/tEqrWaNtWpTK1acmrESy12w5ExzoGaay9FsW9Qu88dBZQXJlmfW6
      SauuEdvwBaq2BcePH9uMqix9gSTfdrp3goVgbXmac9/9BeOD8YfP2xb5Upl8qYp7YHAj7qSC
      ooBtOyiKgtIlIplE8m2jewsgBMlcFcVukV1zODw2/MBpRXNx/sJLVCoVXKogU6gxNjaC4vLT
      qNdQFC+KoqCqcpRV8u2mqwIoqopo5MgZCXztwpaJw+FOpOLDwcjmb+5IeI9FlEieHlt+os/8
      xY9I+BWOHXthP+WRSPaVLRXAqK4RGDhOanFmP+WRSPaVLRUg3H+EK+/8v7TUwH7KI5HsK1vP
      A2Tnefln/w1e59G7OEokzzKPbAGWb36E4pWdWsnzy5YKUM+vEBp4gYHe2H7KI5HsK1sqgBAO
      zWaTZks6w0meX7Z0hdC9EZzWFKWyr8tZQWpliTZuesNeMoUaI/1RFN1Ho9EkFpVmk+TZoLsr
      hG0yny7SG/ZSqnffNSYYDJFbyWC1PSTCHpaXVyk1HU6fOrHpB3RvZ3mJ5NtK9xZAUUkv3MXX
      d4xRdxeHNgGq7kZ1LCzHhWnZqJqGz6NhmBYBjy5dISTPBI8JiyIQgocd24QgnVzB1rwkIj7W
      CjUGEhEUl5dmvU44HJJhUSTPBFsqQCUzw2e3M7i9Ov/su9/ZccZSASTPAlt2goOJUeKxOuMj
      g/spj0Syr2w9D7C+wq2ZJdKp5H7KI5HsK1sqgC/aR5gGS5nyfsojkewrWypALbcC3hioMsKz
      5Pllyz5AePAYR8YsEonEfsojkewrW7YA1bVFPv3yOjduT+ynPBLJvrJlC+CP9PPPvvMKhbqx
      n/JIJPtKVwVwbIPbc6tcPHeWq1eudLlCsLI4T7lhk4h4WS/VGBroQXX5aTRNhvofjiQhkXwb
      2WJRvE6rkOHtt5eJD4x3TdjX10d1JUu9ZXFoKM5qMkuqbPD977yMbdvYto1lWU9VeInkSdly
      Jths1WhYGpFgF29Q4fDnTz9hYPQowqhSb7SIRkOgB3BUjfHBXjkTLHkm2FIBrFaNv3/rLdre
      BP/2r3/54EkhsDY8PTVNxXHEpuObEJ1jqQCSZ4EtO8FGs0p0YBy3z//wSUVB179Kev9eeDIi
      nORZYsthUEVzgbAYHJS+QJLnl60d9u02mWIDp919QYxE8jzwiBZAR7QqLKXW91MeiWRf6aoA
      wrG5dOlL4tEw6ezafsskkewbWyyJVIjG4+gthzd+cHGfRZJItsaxTUCgau49ya+7CSQE+fUc
      5XKJG7fu7ElBEsmTYFstmtUkrXqGVj2LbTV55GrebfKYNcFb86hkiqLIeQDJniGEQ7OaxBsY
      QNVcCMemWUvhDQ6gqq4nynvLeYDHsTo/SVOP4jIqlOtNemJh0P2geRgdkL5Akr1BCEG7kcPl
      jaJqncquqBpubwyzVcbjf7S7vhAC07YwbRO/2/fQPNWuWwCrWWVlvYpjtuiPB1hZyZIuG/zg
      jZdBOFSrVYLB4G6ylkg2sc0ajt3E5e196JxRT+MOPHqeqmW2qbcaaJqGEIKg149L+6rV2GUL
      IEgmk6xXDIZ6IyyurjM02MfgeJBUNsfoYB+apj0wWyyRbBchBI7dxjKqCMfCG+hHUR7urlqa
      jqrYqJrnofQALaONYZn0RntQULAcm0qjSsCj4nG5cYSz+xbgccg+gGQ3CCEwWgWEbaB7wmi6
      f0v3GsusY5vNB8wgwzKpNGsbO5QKEuE46n3K4zgOxXoZr9tDvdXcfR9AInkaOHYbYZt4AgMP
      VHzTtmgaLULewObvmu7HaOYRQqAoCoZlUG5UCftCuHVXV8VRVZV4MEqlWSXkC0gFkOwOIQS2
      1cQyqqiqjssb62qm7DRPs1XC5Y08UHmFEJTqZTRVo2W28bm9m2aO7gpgmzV0d4hKo0Y8GEVT
      ta2KADqjlBF/J4CzDN4p2TZCCGyziWU2MJr5TmX1RACFVj2DZdR2PTYvhMBsl1A0F6rmfeCc
      ZduoikrYF6TR7oz/F+tlaq06uieK0SphWZ2lu+oOlVC2AJJtcb9tjqKhu/y4fT2dIMiaB81u
      Y5l1jFYRlyeM7g5v2zW+8+Uv4tgGnkD/Q+nuffV1rVNd25aB4zgIDdarRUKeMNVqBu+GPDtB
      KoBkSzqjMS0c28RqV1B1L97gw8OOiqKg6V403Yvwxmg31rGMNIrChn2uoeoehGNvKgyKirbx
      v9HMA3St/EIIWmaLnmBnp6KwL0SpUSHo9eNze/HobhpGk6ZpEgo+2vTphhwFkjzEPfvebBVR
      VReq5kZz+R4abnxUeuGYoKgoKAhh49gGKAqgdDq6wsYxW5ho2I5DNDK0WfkdIbAdG8u2aJmd
      HYpigUjXshwhyFcL+F0uVLOC259A1TzbbgmkAkiAjruBbbWwzTq21ULTvbg8kT1zOutapmOR
      q+RB0YgGIrg0nVqrTtNoo6kqLk3Hpblwu1yP7dhCJ5pJu5lHVV24vFEURXusIjyxCSQcB8t2
      0DUVFGVzTfB+8jgdPujLNLs/H7Fp4thmY6PS+9BdAdy+xP48M0VDUXRiwSjFegkAr8tLT+jx
      IzndUDU33sAAtlmnXc+CEGguP5ruQ9Fc941SKZv398QKsDA7TaPdJhwOIlQfusfHcN+T7Swp
      hNj6pSEQjo1wLBzHxLFaOI4JgAKITgYoioLY+E1RXSCcjSZYRVV1FFVHdwe51yQ7ttH5Yqhq
      l7IFCNHJe+OYe7nfqyjC2bB3O5LcG5u+/542pKPzAtTOC7lv1ELZMBEeKvv+o81/BEI4m+V2
      cDaejY3g6+f4StZ7pShqpwOr+3F5ezaLFmz1/PcW07I6HgOaRiIUxxHOrir+/SiKgu4OoruD
      G6NWNSyzhmhbCLGxZdfmq9Oe3ASam5unP+5nNblGumzw3ddfRsWhXC7j8/k2W4R7lXo7x7Zj
      UG89HJX6XoVmo/IIoeAIBVXt+HmgdDRbOM59xzaCDYVwxMZDEiBsFO5t/6SAoqMoHQVTHqqE
      fHUd9yrzprp1KtYDT7GjLMrXfr/3qDsVXWz+//XzWxX9dbkEXfJXVKCj/KqifvVBUJUNvRVf
      KflOjh94pjs5pvPclY70938YhBAEPH5cmr6jetKZ5eWBY03TNveke9yxpmlYlgl74Qqxllpm
      rVhneCCO5glSrTUYHpBxgSTPBrITLDnQbPYBhBB7uq2pDI0oeRZ4oBNsGHsXCdo0zc38HrR9
      H8/XO5DbwXGcHY0+7bSMnd7DbsrY6T08L2U87ff9qPw3FUBRFPz+LlHgdolt25v57aby7JTd
      vNid8DzcgyzjYfbFFWI/xpSf9gN/Hu5BlvEw2t/8zd/8zZ7k9DUMw6BSyLCaqZLoiXD3zg1K
      tTahUADTtMhms+guN7quU8ilmZ+dxXAclhYXQfcT9D887Z5amWKtKIhHA7RKWW7OZ+mPR2i2
      Wmiahml2HLVy6VXm5+YxbZulpUXc/gg+z+N13bFNblz9glDvCG4NCukVasKF39UZPjPabYSi
      ojgmM7Nz5Is18tlVsoUKiZ4429GRQi7N/MoafYk4jt3m0hfXGRkewHE64/qWaWDaDrqmsLQw
      x3JqjXatyNJqmnhvL9o2CimuZ5lbTtOX6CG7usRyMkXTFPjcGqbVJJnME44EyWVWmZldxBEm
      iwuLuAIxfO5tfBOFYGHyKnUtRtinc+PKl6wXSkTiCYxWE13XaTWbaLrOejbJ/Pw8pmmxuLSI
      7gvh92xvIXs2NU9qrUlPPMTk7etU6gbhkB/DtMlm07g26k9+LcXczAyaz8+diSmGBge2HMi+
      h+OYXP3sy6frDt07OIC6MU5rGG0UReX2tS/46E+fUq5UWF2YoVhvE43F0FxeWo0GJ0+fpV7u
      HoxraHQYp92Z9FrOFNDtBpXsEouZHLPzc1y/ehvbEcRiMXSPn2arzekTxymXC9uSV9Vc9PfG
      2JguwDINUisL1KolpmemmZxfYWFpGVV3Ewn68Ac86O4QQbeCvc2xtHhiANfGxoO51WX8Pjfr
      hTWWMyXmpmeZmZlh8u40KCqxaASf34+Fynh/iFJje4MUsUQ/bq1TRrnR4vSp07QqOaamZqlU
      SqSSazhCEI3FcHu9NOoGL559gVJ2e88JRWFkeADD6rxbfyjK8fEEd67f5JNPP+HaleusrOWx
      bIdoLI7L5aXWbHP25DFKpe3vOto/NIRide7ZaLdRVJWbVy7z4cefUalUWZqdotK2OvXH4yMc
      ChMJbs+MV1UXA4n401WATHKVVCaNYdkEIz0cPTxKMBThyNEjeHSVlmHj1lWmJu4gFJVgwM/d
      iVt4gz1d81tZXCaVzeAIgWWZRP06mXyDRqOB1+djZGwct65y5/ZtNE3F79aZuDtDMBTdlry2
      2WJ1NU0ms0a7XiGZr9ATDrC4sAiKysDQMD6PC7NeZHohjaLotJslyg0LbZsWUi6bJJ1O0TRs
      Ki2LRE+MUr7AemqJtuXg2BaGaSEci9sTd9FUFWyTxVSJsG97s6Tr2RTpVJpG2yLg0ZmYnMDl
      D6PioLj8uDUHR8DE7duoqobfp3Pn1hShxPaekxCCpaUVMuk0ANVSntmlHAMDcQaHxxjoj9Nu
      NRECJm/fRmgaEZ+LW5MzOxoaT62skMqkMW2HUCzBkfERgqEIx44exqUptC2BS1OYvHMbRVWp
      lYuk0ynyxepj83bMFsvp1LM/D9As5rBDvQSfB8du4bC0MIet+zkyNvxNS3MgeOYVQCJ5EuSS
      SMmBRiqA5EDzPFjOkgNMZvoKlxeqJGJRLp4+go2OriloioLu8WC2GpiOyuSXH6P2HcXt0aml
      FokNHWcg6pEKIHm2sYwmh09eZPX2J9y5WeTzOyscHk7gcbv54Y9/zHvvvYflqIh2jdfOvUaq
      1OT117/D2++8z4JZlSaQ5NlG0z3MT14n1DPAWq7IUF+Cl44Pkje9qIDP40J1eehJ9BGPRdCd
      NpcvX2J0dIim7ZOjQJLnj8Wpm3j7jjEQe/ykmFQAyYHmqZlAB30huuTZ4Km1ABLJs4DsBEsO
      NFIBJAcaqQCSA41UAMmB5gEFWFudZ2YpA0ByZZntxogwmxVWM/nN49Q2F1bUihlWs6VHXiMs
      g0ars7h+cWqa9h732W2jyeUvriKAdqNEdr2y7bSrCzN88cWX3J6cwXYeI5djUW+0ALhx/fqj
      rxWCT//4HrVWm88vfcaVK1dYzaw/Mkm9Xt+23PdoFVPcXVrj0p8+oNw0d5z+eeABBVi6O8kn
      n3+OJWDy1i0swGw3SabSOEJQq9UAKBUKOAIatRqOAE138cXnnwMwdeNLGkKnWauwsprEtJ2N
      NOvk8iUEUMrnWC+UcHsDBP0eGvU61XKJtfUCAmhUy6ysJrEcQXbuOv/pvcvkCiXCsSgaYFsG
      q6tJTMvBsdrUanWSqyksR+BYBqurK5tK0242OiuXhKBWq2O0GqyuJjHMjnpbrSqXPvkjs6kC
      zXKaueV1hHDIpJM0WgatRh3Tdmg1qtRbJrbZprmxKm1iYpKTZ84zENF576NLAJQL6+RLFQTQ
      rFdZWVnFtB1K2Rl+858+ILteJJlMUS0XyeU7yl+vlEimMzgbStQsp6mpEYKaw8pakZcuXuDm
      5U9o2lArF8nmOs+pXq9jtBus53K89ZvfsLKapN1uduRz7I7CCUEumya3XsB2HBr3vRezWWat
      WOXll8/zySeXnlIV+3bzoAmkKLzx8ik++3ICAGEbvP/+hwizzgcfX+bjD96nbZn83f/9f7CU
      b/DhRx91MnH58CkGLVuwlKtzuD9MvlBAV2ze/+BPLE/fYGIhS7NeZWHyGneXczRqVaq5JSYW
      1/j0g9+zlClw68+fkG+a5AtFdMXmvT9+jMvlwuXx4Ha5uHH1SwwhePcPv0dVFd55730amRl+
      8+7nCKvMR59d54/vvQOqi2KxCECrlOLTK5M0Skku35jm3XfeQdMUSuWvVg2dfuk17l69vBll
      8PNPPqRuOHz4/rukFye4PpPmy0/f50+XrjF9/TLpUuv+h0Zi6DBGZY3k3G3uLGWZu/FnFteq
      FAoFXDq8+96H6C4XbrcHj1vHbtfIrJe58vEfKRsm737wIYptUG10QoFP377FC2fObpZwL7Rj
      OTPPpRszVHJLfHFzmj+9+zv+/h9/y1qphtvlxuv1Uli+zZW7KWgV+fDyTa5e+ohMqcmNS38i
      VzcobLyX9/748Wb+rkAPTqPIQRwPf6gPEBs6RnNtjpYtsIwiyWSR7HoZTRGcPtzLlWs3OfPG
      T1mavI7mCaFuzHe9eHyIm7cn0ANxVGEydXeKZDpHPl9gYTHJuXOnGRsbZWk5zbmzpxgbG91M
      q3t8HD16hJ5QgLbVYnLiLslMjmKhQDAYJBKJEQkFNiQ0sVU/Q0ND6I6JDYwfPsrg8DBms8bx
      Y0dYWJinVGkAEB44TH19iVs3Jrhw8SyHx0ZYWFik3mpv3rOiuXnxUA+35zrm38LSMqX1NTRd
      JzF2guziXWx3HI9dZbXQYLS3y/7HqsLUzByiXUdxealXKkxN3GE1laVQ7NxHKBwhGg6heYIc
      P3qInpCHtqMx2BtjaXkFY2P9a7XaIhTsbBOUS69w7fpNXv7uj1hbmufk2fMcP/Ui66tLCOAX
      /8W/5vTxw4TCIXoTPahfm4DMFOqcOXGEWCQEwuTu5F2S6RyFwtfNVMHjrLjnkS6dYIXvfuci
      n/z5Gro7Tm/CRzQWZWR4mOHjL/LxO+9y+tx5MtNf0j9+fDPV8NHTfPr233Hk1BmwDcr1NuFQ
      xxfj2NFxrl29xszsPEeOjHL16g1mZue7P3DboNIwCQd8CAHucIJyZn7TXAAXbqXF7Owstu7l
      66tkbVSGBgdYmJ/t3I2iMRzWmCrY9PhVNLeP/r4eZmdnH0h3+PRLLE9c6SjUyBAuX5CR0TE8
      3iBWfg5PfISoV1A0NFz3NNexWF5e5NoXnzF27Cynjh+lYUC0p5/+Hj+lSpNIMNAJYOuJYJRT
      ZHMPVjwhDPzBHmJhD7MLqwAMDkTJZDstWO/gKC+/9BJ98TCHjh1n4tqX3Lp+jYHxo+huP153
      5wn4NJhbXMETjFHMLDM1PYNpO/RGvNy4M8VyMr3xXgzCQf9GhOtNKXBg84N0kHhgJthst1Hd
      HjQE1WqNYDiEbRqUqzXCkSguVaFWrxMMBmk26ri9frT7nlqtWsUf7LQKrUYN01FxuzQ8Hg+N
      WhUbjWDQT6NWwUEn4HN1XFUdC7fbg2W2UXU3RrOOhYZbVzfTCtWFS1Nwud0Ix6ZUrhCORFGx
      sRwVl65gGBa6plAuVwlGIrj1TuVwLJOW5eD3ejCNFtVak0g0iqZ2ohgblo3H7aLdbIDuxq2r
      lEslXN4AAZ+HVqOO5vGhOhaGDT5vZ9OIdrNBrdHE6w8Q8HW+2I1aFcOBSCjY6X844HHpeDwe
      mo0attBwbdyX2W6juTv32zQcopEwigJ2u8bvPrjEr//5j2m1Dbzer0LEtBp12rYgHApitNu4
      PR4UOv2iSq1JNBKmVi2ju72oikq7Vce0HK5/cYlXfvhz3E4LS6i4dQ2XrmE5UMvOcTvt8P1X
      T+1HnftWIV0hvqXMTd6m/8gpgp4ni5dfLa4zu7BMz8AIo0N9XePl3L51k5MvnkU/gE2AVADJ
      gUZOhEkONA+ER783zr8XGIaB2/30NliTSPaCB6JD72QBS7VcwBQ6kaCXYqVOTyxCfj1PPJEA
      IXAcZ0+jTUskT4Nd9gEElXKJhfllfAEvXpdKo2kTiIYwLY3Do/1yRZjkmWCXUSEUhG0hAEfR
      6YmFyK2nOfTCYVLLaygbG6XJVWGSp0Wj3sbndz9xHdtlJ1hQLlfwBoL0xYIsZbVDl0sAAA+9
      SURBVEqcfvEI81OzJAb6nkggieRxVCtN/vf/9R3KxcYT5yUXxUueOd773U1q1RYjYz288p2j
      T5SXHAaVPFNUK02yqRI/+MlpVpfzT5yfVADJM8XSfI4XTg8RjQeolJqbLuS7RSqA5JkinSwy
      OBJDURR0l4ptPdnWvlIBJM8UxXydnkSnb9nbH2Z54dEr5R6HVADJM0W7beLe2Mjv4quHmbi5
      +kT5SQWQPDO0mga6rqFubMgWiwcpFmo8yUDmrsOjJ5fnSa+VCYe9CMVFPOgllSvQ0zfCyEB8
      1wJJJFtRLNSJ9wQ3J780XQUUHEegbXeXwq+xawUI+ANEe1zEgy5WkylSdYNT50+xOp/GtiPY
      to1lWbvNXiJ5iGy6RKwn8EC98nh1mo02Xt/29h7+OrtUAIfFxWWCsV5MW0XVXPT2xrh76y4D
      o4fRNA1N09B1uf+GZO/I52q8cGrwgXoVifqpVloEQ75d5bnLGqpy4ZVXN//qHxje+H9wd9lJ
      JNugsF4lnnjhgd9iPUFKxTqDw7Fd5Sk7wZJnhnbLwuN98JsdTwQp5Ha/jqVrCyAcm/fffouS
      7cMXCPPLn/5g1wVIJHuBaVgoqoKmPfjN7ukNcfdWctf5dm0BFFXj9ddeQXf7sIxWt0skkn2l
      VmsRDHoecn+ORP2US41dD4VuaQJ5QwlUHC6ePb2rjCWSvaRRaxMIeR/6XdNUBALL3J1LxJYK
      0KrmWF5d5cqNO7vKWCLZSzojPQ8rAED/YJT1tWrXc4/jES1AL2O9UcIxOakl+eapVpqEI92H
      Onv7w6xly7vKt6sCCOGwMHWDxPhpThw9tKuMJZK9pFbdugVI9IbIZbcf1v5+tmwB6s02ijBZ
      XFzoej61ssj03CKVYo7JqVnarQaTExPUDmicecnTpVxsEIkFup5L9IXJZSu76gh3HQZVFJVW
      tchSw2RkcKBrwv6hEcqT02QKNmN9Ie7cnuHU+ZOkVjL4xoekK4RkT2k02rjcatc65XKrtJoG
      pmmh7jC845YzwS+9+WPyH17CcZwuZwXzM9OMHTtGemmBar2Jx+OiUqmAqktXCMmeIoTAtgUe
      j/uheYB7BIJebMvB7fd0Pb8VW5pARr2Eo3mp1brbVn6/n0wqw/jhcRzdz+kzJ7FaBofGurcY
      EsluaTYMPB59y8oPEAr7KJeaO857y0+0Pz6EV0zQM3iiy1mF4bFDm38NDXQ6J8PDwzsWQCJ5
      HOVSg2js0VEGo7HOhNjAUHRHeW+pUtXMLLHDF6nkUzvKUCLZa7LpMr39kUdeE+sJUszv3Cdo
      SwUI9h1h+tLvaSu7czOVSPaK/FqFRH/4kdck+sNk0zufC9hSARrFJEMnX+WFQ9KskXyzrGUr
      9CS67Mt2H/GeAIX16o6HQrdUAGFbNJotmi3pDCf55nAcB8u0H7viS1VV3G4d2+42avmIdF1/
      FQLdH8ep58jktrfptUTyNKiUm4TCPlT18UtX4okQ+dzOfIK65uo4FtPLWfwuqFV352MhkewF
      62sVeh9j/98j1hOgkK/vKP/uM8GqSimzRGjwBAN699lcIRwcAYoQmJaFy+3GNk10l0uGRZfs
      GcsLeQ4f217E8XDUT7W8s4jRW7hCaPzgp79CCGdLmyqzPEvJ9qEbFYTuI+rTyFXqBCN9jA8l
      diSERNINIQTpZJE3fvDC4y8GolE/q0s7C5i75URYNT3FpYksxWaL/+rXP3/ofP/gMPV0kf6B
      AVZXV0lVdE5deIHkQgbbtqUvkOSJaTYMXC4N3dXdB+jrBEIeysX6jurdlgrg9kdYXPozQyOH
      upwVpFMZWg0D4mG8wRhjvXEyyykGhgelL5BkT1heSHP4WN+261EkqtNsGGiatm0zvPuieOEw
      O3WHYycvMNbVnFEYPnSUezMEoVCnkxIIPHqsViLZCcsL65x/ZXxniRQF23bQ9e1tML7l2JIv
      3MNAbwSjvXMHI4nkSRGOYD1XobdveyNA9xg/nGBuOrvt67tHhVBUskt3uX5nitVMbkcCSCR7
      QbFQIxjy4nLvzIw+emKAlR2ETN+yBbj42vdxmhUc+8k2IJBIdsPqcoHRQzsfTewfiJDNlLft
      ErGlAljtBvHefgxTLnGU7D/J5Tyj4ztXAJdb31GIlC3bl0BilEiwyPGjh3cshETypJSKDaLx
      R68B2Aqf302zYeAPPH512JYtQG1tgenlDNdv3tyVEBLJbjEMCyHE5k4wOyWeCG7bJ2gLBRCU
      mmCXkiSGj+xKCIlkt5QKdSJR/65davr6I6w/iQI4tsVSusB/9z/8jzTy3QOPppdmmF3OkF5Z
      4ObNW6xl09y8eZNMfnfxWSSSe2RSJQZ2Ge4cNhbHpErbunaLNkahlF3mH/4hi+7vvsayf3CI
      +XSRpik4fmiQ25OrnP+LFzs7xEQD0hVCsmtm76Z544cndl1/4j1+1teq20rfVQFUTecXf/Wv
      sISCx9XtEkFqdYX0WpXRvhgzC0lGRhJM3pqkd2BMukJIdk2t2qLRMOgbiGxrDUA3dF3Hsuxt
      uURsWUOtVpV33/8TbS3AX//qp187qzBy5CQjX+seDA6P7EpgyfOPZdncvZXk8PE+AsHuIQ4B
      pidSnHxxeNeV/x7ReIBivkZ8Y0/hrdh6HsBo0TAs+vt6n0gQiaRUrPO3/9enpFNF3vr3l6jX
      tl5mu7ywzrGTTx5b6uzFMW5cWXrsdVsqgKq7CQT8eD3uJxZGcnCp19r89j98wU9+eY6f/vI8
      r75xjCuX5rteaxgWjXp7yyjQO2H0UIKVxce7RGxpAtntKmtVkzFVdmQlDyOEYGF2jUDQQzwR
      wuXSyOeq3LiyxMkzw7jdGte/WCSdLPK9H5/eDFh19MQAn386y4kXh+gf/GqAxXEc3vvdTU6f
      G3li8wfA7dZxHIEQ4pH9gC0VwBOIElQN1isyKoTkYSqlBp98cBd/wE2t2uLQ0T6SKwXOXhzj
      yz/PUizUOXF6iH/z8+9tbGjdwe3WefNHJ/nDb6/z+neP09MbwnEEywvruFw6518+tGcyRuOB
      jahy3aNKAyiii9eQcGw+eu8P5EtVcg34n/7b/3rHhVerVUKhR3dAJM8mQgjee/smh471cfzk
      IK2mwexUhoGhKIltui+3WiYfvXOHaqWJ26PjD3j4wU9O79j781F8+uFd+gYiHD+59fa9W5tA
      joUv3MOvvn9xzwSSPPsIIfjswynq9TbHTnQ6q16fmzMXxnaUj9fr4ud/eeFpiLjJyFgPM3fT
      j1SALYwthUTvAIl4hHxexgWSfIVp2sxNZ/ir//LVb330j6HROJlkiVp1azO+qwm0E7KpFUr1
      NsP9CZaWkwwfOko06JUm0HOIEIKP358kHPFx4dVnw0v4yqU56u0mx872Mhjre0hpn9jgMgwD
      2zTIpHIcPXWc1FKWkE/uEPM8sjCzRjpZ5PXvH39m3m1i3McX/3Ga8ZNRZlIL9EZ6CHm/6hQ/
      sQIEg2EsM0fLsEgur6K6g9IV4jkknSxy6eMZ/vrfvo7b/eg4nd80juNg2iblehXVBS+8MEIr
      r3LkxBir62ks2yIRjtMy20+uAKFIGNXjIxwMUKtWCUiz57nDsmz+8I/X+Jf/5nX8O9yCaL8p
      1Stkizl0TUcgODIwRs/3evj//t1nDA7HGO8dZmU9Rbq4RrlRffI+wFbIPsDzw82rS9QqLd74
      YbfdgvaHWqtBvlJgJDGIpnYPeVKuV1ivFBlODODR3Q/Y+8sLOW5fW+EX//IlhBDkynn8Ht/W
      rhDPOq2mye3ry0xPpigVdxYwVfIV1XKTq5fneeWNo9+YDEIIVtfTqKpKuV7d/O3r3+5MMcd4
      3zBel+ehzu7ooQSGYXHl8jyKotAXTRD0BZ7cBPq2USk1uHJ5nuRygUNHe9F0lWufLzAwFMXr
      c+PzuYnGA4yM9+x4S82DhmXa/P4frvHjf3F218sT94JGu4nH5aY/2svS2iqxYISZ1AJet4eh
      +AC6ptE2DXRN37J1UBSFX//rV3j/97e4ezvJyTOdsG7PjQm0vlbhw42Zxb948zgDQ1F6ejvl
      27bD3dtJHNuh3bZYWsgxMtbDa989vm/yPWuYpsXbv7nK4WN9nHtp/Bsd808X1vB5vEQDYRay
      K4T9QUq1MtFAhLVynpHEII12E01VSYTjj8zLaFu89e8vcfalMc5cGHs+FCC/XuXtt67yw5+9
      yOBw9LHT6ZZl8/ZbV9B0jTd/dJJYfGtfkYOGEIL5mSyXPp7hxfOjnH/5m638Qgimk/McGzqE
      pmoYpkGykKUnFCPsD1JvNciWchiWxfGNax6H0Tb53T9cY+xQ4tlXgEK+xm//wxf8+l+9svnF
      3w7CEaRWC3z03iSBgIcf/vxFgiEvmqYiHEF+vUo2XcbndxMK+7BtG13XiMYD2447+SxhtC3u
      3FhhYTaL1+fmte8eJ54IPvXKn68WaRlthnu+WgNgWhZNo0nTaFFp1PC5vYwkurszOI7DUi5J
      bzhO0Lf9D5ll2rz1/1x6thXANCz+9t99yj//y4vb3kXk6wghWJzL8eE7t1FVlUDQs+GT7mdo
      NI7RNimXmui6imnalAp1Dh3r47U3j+3Icetxbrn7yT1X5vmZLJZp026ZlMtNTp8dYfxIL4m+
      0L7JOpNaQAD9kR6CviCr62ka7SYBrx+/x4vP7cXj8qBre//RsUx77xRACIdCoUgsHkdVlKeu
      AJZl809vXeGFU4OcPjf6xPk5joNlObRbJoGgd8sOsmXZ3Lq2zOStVRJ9YQ4d6WXkUM/m+LgQ
      gkK+RrXcpF5rMzedoVxq4NiCYNhLojdEvCfI6OHE5qZuQkAw1L1My7JRFOWRu6TfjxCCdsuk
      Vm2xNJ9jaWEd4Qii8QCxeIC1TJlCvkYsHuDkmRF8fjc+vxuv14XHu78TXI7jMJNa4OjgOItr
      q1i2RV8kQSQQ2pYpsxfsmQKsry7SUDQs282Rsf4nUoB7L/BRfPjOHYYPR7nwyjfjk2LbDssL
      ObLpMktzOVRFI94TZG2tTDDsIRzxEQz7GB3vIb6xxWe91mYtU2YtXWY9V8HcCOGnoNBsGqiK
      gkvXCYX8eH0u1nMVDMtEOAJV09AUFV1XMcxO4CjLtvF5PaiKgmnZ2LaD4zjoLg1/wM2ho32M
      He6EF6yUm5QKdfoGIsQTwW90VOceHROnynjfyOaw5l4shtkJe6YAyfl5esZHSC1lGR8folwu
      4/P5Nm/q/ht83HFyucTUnUfvUB9OeBk7+ejdw/cLITrNqdFy8Pg1dH3nL1EIOiuYHIHRtjHb
      DoGIa3MxiWN3zgkBqgooCoqy8bsARe0M9SkKz9TwbtQfxqO7d1RPHKezbdf9x5qmYW8Ecn7c
      8f2/7ZkCGM0qM/PLjBw6RiTgkTPBkmeCZ7oTLJE8Kf8/8t0QI76gIpcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 6' width='192'>
      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
      p/L8/1YpXYH3XPXGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deaths vs Vacc(PT)' width='192'>
      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
      Ti7ewmcrMj2VIRTxrapz42oYTU3S3tiCJEkossxEaopDXXv5wOF38qtf+s9vT4WcG9t4zWP/
      oU5OHBusik0bTgCziRzPfPck73nkIMGg97rtMkmSCIbKv4vGy8WQNK2KXQY3OKeOD7Fnf3vd
      qj+MpabY1lAefXqaOnj+/Os0haJ88uhPkNZyjM1O0tbQfFP7/AEPobCXkcHEqm1akQBmJkfp
      67/MpQvnGBmfXrURldB3doyj79zL7v3t8zr+XYskSfTsaqHvzMK7DVsNXTcYHkjQu7etbjYM
      J8bpjLYC8JN3vI83Bk5xW9deACL+ECeGz9ET77jpfSRJ4v537ePl58+v2qYVhQK9Pj9hScUw
      PDhm7VIhLMvm3MlRPvbJe5f1Wrfe1sHf/fWrNEb9tHdF19S29YzjwLPfPUnv3ta6Vn+YyiSJ
      +iOYpsmR7lt55re+hOxyYZom8WAjj73xJB+/8wPL+mwjjb5yRbtcYVWFeFckgGQigSX7UOwi
      nhqmQowNz9Da3oDPv7w5bDCk8KGfegdPPPYGP/PPjq77k09rxbnTo5imzZF7eq90d6k1hmXi
      ckmo7qsNOK71lpZIjO+feYnP/cJ/XbYf7drTykD/DPsPda7YrhVNgbp6dtHT1U5n906aa5QK
      4TgOb/yon9vvXDhKuBiRRj9dPXG+9bVXV9RwbaOj5XVefu48Dz18ALd7bZ3/dx/7I06PXpj3
      +7yu8WfPfZ3u+OJNM95/8EE+89O/jSov/9t81+42TrwxwGxi5c20N8wiuDzc6Qu25FwKSZI4
      +s69BIIeTr45dPUBB04eG+Sxr73KW8cGGR+ZZWQosWT3843G0MAMX/r889zzwG6CodV1bLwZ
      tmPz1688zmuX3rryu6Kh87/+8c/4tS//F75z4nlu7bhl0ecf7NzNw7cerWiBHm8O0dUd57Gv
      voplrWxat2HSN4cHEnT1xFe0gyFJEve/ex9f/OwPGB+Z5Y67d/LiM2fRdYM77+vl0oXJKw0e
      hgcSfOAn76CpZX0fFVwM23aQJLBMmx987xQ/80tHCYXX1vkBckWNbQ0tvH75JL9430cAePr0
      S/zTwCkePfwQH3vHI1XvISdJEvc+tAcH+Oxnvsf7PnhbxYv8DSOAyxcn2Xtw5XM9n1/lgXfv
      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
      0kbXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Forecast(PT1)' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Forecast(PT2)' width='192'>
      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
      ujFGAIOq5v8DITCrN4FLbUEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='P.rate vs Patientes(EU)' width='192'>
      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
      JU4m6mxSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Running Total Cases_W' width='192'>
      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
      dPF/AGus1tUDrt4EAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Running Total Deaths_W' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story' width='192'>
      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
      xnMt6/j/ASH+czUktAB1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top10_cases(pm)_W' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top10_deaths(pm)_W' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total_cases(pm)_W_map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3wdZ5X//56Z25ukq2p1WbLk3nscJ47TnZ5AAtkQCBB2F1iWhWV3WWBZ
      +NFhCSGEQAgJJR2nOTGxnThOXOVuq1m99357mZnn+8e1ri1bcuRu8+PzeuUVee7MM8/MnHOe
      85wq+Xw+YTAYAHhv91ae2vEX7ltwM1nuDJo6W7nz2lsYwUsbXyM3LYulcxfFj/X09pCWmoaq
      qrzz/mayMjJJSkgkKSmJR57/DVW+ZgBumX41NyxeRXtnO+u2bWQo6KFTH0RHAKAgIwHJOOjD
      h4aOjESaJYmffO5bSJLEWIhEImiahqqqY/5+qcFqtSJJEoqiIIQY97kuFCKRCCaT6aLO4XTR
      3tXGC2V/JqpEKDSV8JEV957xWAaDwYDZbAagy9tHmpLA9LxiNu/fxj/c+JH4bzWNdfxm83N8
      +aaH4sd6env41E+/zCP/9B0G+vrZUr6T6s2NGFSZT9/4MdYsXs36Z77FsAjQ39LNI2//ngJz
      OovzZjPY2UdvuBejZKBF72WpcxqhaJgOxc+k9AzebShlsiuLT910FxaL5VQPQDAYRNf1Uccl
      SUIIccYv5nxBkiQsFguSJBEOh+Pv8mLBaDQiy/JFncPpoLm9iT9/8AfqlWoApk2adVbv0HD8
      P66atZTijAL+/NZLbKzdQSgUYvaUGVy3fBWD3iEkRWZLxS7uvv52AFKSU8hPyORXa3+P1Wwh
      w5HCwdYq2tR++kJD3LZwDV/r+Cwdvl7cFhffe/c39IaH2N1Sxs++9B0MigFFkalva8JkMLJo
      zgL8fj8Hyw8TjUZ5eM0/sHD2/FM+gCRJRKNRDAYDBoMBTdNQFAWz2Uw0Go3/d6lAVVVCoRBm
      sxmj0Xixp3PJE//Q0BClVbto7m8kokeoGDxMwOQDAdkijxsX3nxW449igANHykgyO3m7djsR
      ofJE6UukHkwkNzWLOcUzmZFRRGVbHes3/JV3qnfynYe+xvKpC3i/dBuOFDNrm97BJawgQUSN
      omka0wqLKdImM71kGs/sfAVrSOGOZTeSn5sXX/4zJ2XGpbXdbmfJgkUsWbCIJ/70OxbMmndK
      NUGWZVwuF6qqxpfykfMVRcFkMhEOhwkGg2f1os4VVFVFVVWMRuMlwQCXMgaHBnll41r2DZXi
      d3piB01gi9q5JucGbl12+ym1g7FQ31BPf38/ixYuiqmi3/jGN749sgdItCew5eAO2rs6CWsR
      wqiEtQj+AQ/XL11FxBdiQ8VW9tYe5lBvDVfmz+fKxVfQ3dfDO7U7CetRIqiEiDInrRgrJnJy
      cmlrb6OwYDL+YS8bG3dR2niIfOsk8rJzAAgGg7yyaR2/fO0pfr3uj9TX1zE9r5iivMkkJSV9
      6EPJsozBYECSpJOYRZKkOKFdSvsETdNO++P9/wl9/X38dP0PKBcHiJrDIMDst3HVpNV87uov
      sGj6Ykbo9nRgtVjJyc6Jr3yjRkhKTKSquQZdEngJkikn0aEPsrmhlJv+8+OkOtyEidKhD2CT
      zaQlp3KksYabV9/IioXLqKur49Etf0QSEqFeL29uWs+27sMkOJwsXrCIspZqomgg4JF1v+O3
      G55lZn4JZfWVVARb4vOoq2jjYGsVT/zrj87yNR6DxWIhHA6ftFe4GDAYDOi6Hl/1LvZG+FKD
      1+vlxS3P0SG3wtFXM908m4dv/mcSExLP6n3tOLidpbOXYbfbgRMYwOfzIYwSoWiIXCWVHFc6
      kw05RHSV/f1HaAp0HbXVQGFSDm3dHXzvL7/kzR/8GVmWEbpgcLMfIwpTCqfQH/HQ3LwREepi
      f/khvH4fAFFJoyHSBREoL28cc6JdwQEi51h3NxgMRCKRczrmmc7DaDTi8/mwWq1nJMn+VtHc
      1sxrO9dyILgHjICA6fJs/vG6L5DgSjjr8ZOtKaM2zaPefEpKCo9/9cccqa1GlmX6+/t5bMMf
      qB9qxanY+OiSm5mRVcxAYJhV864gPT2dZ/IeiS8n06dN44kHv4vNaGXm9Bls2LyJJIOTAdWL
      J+hl6dT5lHfXEiBCEnYGhT/O4QAJko1hEQAgU0liaHgIcvLO+qEhJmWtViuqql70VSAcDmMw
      GLDb7ZekpepiQo2qVPWVIxJj38jstfLRGz5+TogfYO7cufG/w+EwJ4keSZKYVjyVnt4e7n/0
      SwxH/eQ40vjFZ/6XWSUzThowLS0t/rfNamPlkhUEg0EaGhu45sqr0VWNek87U3ILmVcyGwcW
      1h7YwHUFS3n60OsYUHBKFnRJMC29kPLeOqwWK7cuvYE5M2afk4cegaIo2Gw2fD7fOR33dDBC
      8KqqYjAYUBTlos3lUkRVUyVRYxQ0CZvHwc1Tbicv9+yEoK7r1DfUM6VoSvyYEIJ9B/YhhUIh
      MbIkdHZ14k5yYzabEULQ1NJEW3cnc6fPwulwTviGAwMDmMwm7DY7uq4jyzK6rsc/thACTdNo
      72gHwOlwYrVaMZvNhCMRhK5js9nO6qHHQyQSuagMMPI+jEYjdrv9kjFDjszrYiIajfCDZ75H
      vf0IALcm3cPdN95z1nskIQRCiFHPF4lEqKmpHr0CvLT3r7Q0NvOjf/omBoOBgrwCCvIKJnwj
      VVXp6u7mje1vMzt3KiuWXsGBqsM88trvaO/v4oGVd5LgcDFn8nSKCovIy807aSNoPc+WkYst
      cW02G7IsYzabL6nN78UmfiEE7+56l1a9CQB3dzorVl95Tt7R8dZBTdOorKrEYFDIy8s/WQV6
      o+o90p5L5msPfHHMm4dCIXRd57m312IymXhgzUeRJAld1/nKz75BfXczIqrzsvwma4unsf79
      jezvqCSKxg82/RazZOS1r/wWIQTb9u3k0XVPo0VVHv38d1EUA+u2b2B2wTQqmqpZMnU+iqIw
      tbjknBGLEAJFUdA07ZyMN1GYTCaCwSA+ny/OAH/HMVTVVrGu/FUirhAIWFi0iIz0jHN6DyEE
      Q0NDmM1mer097Nm6+2QGAPigopRbq6+lqLAIk3F0nEhvby/1TQ38cccrDAW9XLdwJZMyJtHY
      0kRNWwONWg8aOgsdxbhcLg50VsVMn0dx87SVFBZMZufB3Tz8+/9GRePBhbez/UApT77zPM2R
      HuYlTKFyuInwO0+iIPPlaz7Jw3c/eE6YQJblODGeb4x4pkfCTTRNQ9O0eDzQ33EMuVm5WCQr
      PoaxB51cf8ONE762rOYwZS2HuHfVx+MrfGVVJSajiaKiIiBG/L965VH2eUrRTVrM+CLBqHXP
      KCnclLecgpQc7nn087xfuj1mGhWC/oF+dF1nV/k+vv7ST8gxpjI5MYu01DT8AT8RLcpX7voc
      bsVBujmJj6+8k/dLtyEdJ2gNKDx47UfQdZ2frn0CFQ2HZGFp/hyef3stXZEBAOr97ayaFAuB
      0NB5YstztLW3nc37jUOSpAsm/Uc8vpqm4fV6MZlMuN1urFbrBbn/5QJN0/jF6z+j39qDHFa4
      a8q9pCSnTOhaIQT7avbSMdRBIBCzIJZXlTGlaEpcvfZ6vfT09uCLetEtWozqj8qfUSvAnPQS
      fr/xBYajMVv+zn2lfOPFn/DpVfdCWMcfDZI/KYdezcPAsI/HP/o/KIrCroN7+MFrj/PAgtvw
      6SGUsMxj7/6Jf1n9CYJ6mGTJyYKCmRhkhekl0+ju6aZxILYBXlowl91NZfQKT3yl8KgBUlNS
      ucq0kBnphRyur6RnqJ+co57js8WId/hCxAgJITCbzUQiEQKBQDw84+84hh1l26mP1iBMOvbB
      BBbOXTThFfJA1X5q+6qxWq28Ufoadyy/C03TKT24ixWLrkQIwf7qfXiDXvLSCqjqLht1/agV
      YG9XJcNRPwAWxcTa6ncZ0Hys372ZA00VPLVrLQPd/SjIaOh0BfoBWDpnEalON//flt8SFBF8
      hGgJdLOntZyPLr+FQeHjoevv45Evfw9Jknhv33Z8hABo7G2laFI+XhGKh0ZbMeE2OfnsqnvZ
      Ul3Kzv4KfvzirzhUNXryZwpJkggGgxfEBj8SjDcS9nCxN5uXIpwmF7ocE34rS1adls1/f/Ne
      2sxN1OpVbOp4i+a2ZqaVTGPvkT1EIhF+/fpjEIGr563CaXTCCS4gefQ/jnGdVwsSIAxApaeR
      d1p3EyZKiAgOOfYx99UfBmIBbD/9zLd4cP5t8etVNPKSM3GZHRRaM5kzfVY8RNkf9MfPC4SC
      tDe3kiwfM7NaJCMVjdX8+I+/RPWEsWFif381z63/C37/sWvPBCOx+BcSIxGgTqfz77r/Cegb
      6OP9is0IRYCAZEfyhN+REIK2oZZRx4xGA6FgCB2Nvv4+9H54pva3fPv1/yY/vYDPT/83DNFj
      QYijGGC82x4vJ8s7aylMjqkih1urCYVikjxrUiZfeeDzLMqcSRJ2zBhITUimva+LRdkzCR8X
      gjAY9Bz7W/XSFxyiT/fEb+QXYbYMHKJR9KCj4z26WuxqOUzpnt2EQqGzkt4j4RDnMxpTUZRR
      IQ7RaJRgMPj3FeAE7Kzazn61NL4p9UUm7qMJhoL0R/ri/06SkjEZzXzvzW+TkJzA45sfxZsw
      hEE20Ct38UTpL3HaXEwOlyCrse8w6mtkKEnMTS5munF8XXtL414O9dYC0OTr5ED5ofhvVouV
      L938KRwmG69++TfMmzabdfvf4YXajby65c34eceHIoRElKrBJpZMmhnnwAgqKhpeEaJOdB97
      QM3Kc2+8zKf+85/41UtPnTETjOQLjNjkzwc0TUMIEY9S1TSNaDT699CHEzAjZyZ5w0UoAzFh
      tLd194SMFKqm8vr2V/AYh2IHBCzLvpId1dvooh1f1MeVhVdTH6whosQ0Ga9hmB/u+TYeeQij
      GjNDjwqH7vb0saNqL1X+5nFvrCMQR0W1CQP/eMMDJCYc09ky0ydx04JV5OTk8OuXn2Zr6340
      dJrbWnjguphXb2pWIclBK1mOVKr7mukK9NPs6/rQhw6KMGg67doAgz39TM0uIiMt/UOvOxFG
      ozFuhx8xVZ4PwhzxQI7E/IyEY5/uJljX9QuuOmmaRlNTE0eqj2C1WKmvr8NkNmG1nFsLVlKC
      Gz2i01ndjd/pxSc8FDumk+ZOO+V1b29dz+tdLx9TWyTw+DysLLiavR2lDIb7MQsLGZEsPGEP
      EWNMi1AiBq7Pvpmy0EGQT2CAXZV7WbtvA0hgxYzb5CKghcadhCZ0AsNepmdNwel00t3Tg81q
      xemM6fPby3azv70SAUga3LXkRmw2G0ajkW++8DPKOmsIE2WipBdBYwA/KZITXdNpbmlmeHiY
      vEk5p+1Yikaj6LoeJ8ZzbRGSJAmHw4GmaZhMJiRJIhKJcHwK6umMdaEghKC5uZmdu3Zy4MA+
      uns76Ozqormtnra2VkKhCBnpGed0TrmZeciKQktvM9FQlMr6CmZkzcTlHH8zXFFbQZ23Gl0+
      pk34NR8rsq+ivb+dPrmHtkgL7aIFTagIQ+w8oeg0tNcjazK6WRvNAFNzilicOp3b56zmrkU3
      8LGr7iDHmEpVSy1BxggjluBITyN7D+9nbv50BgcGsFqscTt3ZX01uxoPIhCERISBjl6uWXQl
      iqKQ657EtsOluLEzTODocBIyUpwhFriK6Q8Po52wdfcSIpNEjvha2FxXitEvWDR7wWltnjRN
      IxAIEA6HURTlnCfLGI1GVFXFYrHEs78kScJsNl/0cIyxIITA5/Ph8/nY8v571NVXUzwjHxkD
      skmQmubGaFGQjFEa65vJzys4Z0wgyzKFuYWsmraaJTnLyXcVkJOVy+7yUtLdGWOGi6ckpLLp
      yNtxwgaQNIlrJl9P52AHHdGjfiOJUecggWaJoht1kE/wAyiKwnuVO1l3cDODqg+DJGOTLHj1
      wLg7ZB1B2VADn3jky/z37Z9n7py5CCHweDzo6KOIVwRV+vv7SU1NZeWC5byQ+Wve3LSeiq56
      BqNeuoZ7UQMR0uxudKtM62AXP7zl3/jaup+iSseNg6BNHyAsqcyw5rHlwA6SU1L42E13T/il
      +/3+uGQOh8MTvm6iUFUVq9VKKBTC7/djMBgwmUyXZOy/pmn8/unfEfAfNQ0rGu7kRJJTk9A1
      gc1poa6jgWRTMpGgzpKFV+D1es+5VctisZCdlU12VnasysjhDVR2l/PQdZ896b0NDg8iyaPv
      bdFtWE1WygYOwKkWWQlQjlYjOX4FAHhj2wYO9FYjJIGGTogIujS+kmJEYYopk48vWENKcgqF
      +ZMpryzne0//nDuX30hDbR1BLYyqa9w0fSVhf5DsrGyMRiNOp5P5c+Yha/BexQ5mp5cwL62E
      e2++C4YjrFmwGlVVSTUkUNZfN+q+ISmKjIRTNxMVKoWpucyfNXecWZ6MSCRCJBKJh0acD+/w
      8ZteIQQWi+WSk/6aplG6u5TyijKi0TBTZ08mJz+TwuI8FEVBkuHZ8hdpooEhjwetV6e2uYaN
      uzcQDoWZkj/lw29yAkb2Q6d6F7IsMydvHrsO7eC1Xa9Q21VDxBchI3kSiqKwu6yUysEy9OOk
      u1AFMxPnsLN7a8ysOgGMYgBJklhYPJeezm7cZhdC0/FGAyddlGFxMzetmBZPN7okyDImMzkz
      nxULl2Exm3l2/cu8WvseRyqq+NJdn6EgMYt9LRXsaD1Ic00jRRn5hCMh3EluJEmivrmB5/a/
      SdVgI0FvgNn507jxmutISkgkHA3TP9DP1MxCyrpqRs1DI5ZWmG5IpHWwk1XzV0wozGDEEzyS
      JDNipTlfFhpJknC5XJec9G9tbeXIkSp27tmO02VnUnY6mkHFnZgYNxG3drRTFa0EGSKhKFE9
      SrW5kmF7Pz2tfXR3dUFUwml3TnhzX9dcx3fXfZMMayaTUiaNe15zSzNziuexsfUtWrUm9vft
      pra6limpJWS400nR0ykbPhjXTmRV5uYZt7GnbjdGjEiahKacWrCNYoCNpe+x/8hhREjlM7fc
      j8toY0fjgfjJEnBryVU8dPVHSXYkMTUhj1AoREANs7hkLqFgkHc+2MzblVvpj3rwqUGum7mC
      I/U1VPU2EiRCRNawBxV+/M7vuGb6chJdCViNZt7Z/h4eEWRA8zIjrZArFi7jjXfXs3rFKtLc
      qWzbtwOzbKQ3NDTqASwYSZGc/NvH/5m8vLwJmzVHJL8sy4TD4fOWMK8oCk6n85KS/EIIysrK
      ePOtdfT09uJOcbJgySz83gA7WkvxBXxkp2QR8Adp7GumXWsDCZRBI173MBgFyBDUg9Tr1ezs
      2cre6t0UJhaT6PrwnN29lbs51L+fuSkLyM7IRtM0Ptj5PlpUx+12I4SgpqGGPbWlzJ+6gOr6
      avrpBQn61B62lG/GEDJx1cJV1Nc3MCBivym6wuri61mYuQhrxIE94sRhcNKv9447l1EM8ObB
      9/jp+ifZ31XFhn1bWJm3kGg4wrz0qVyZv4B/uelT+EMBnnjnWd6u287yjNn8z8Nf48Gb7iUQ
      CLBw7nyWzF/MwrxZNFTWUpRdwK3LricvK4dX92wggooM5CZmsru7ggTJypIZC/jVy0+xveMg
      OoJsYzKLpy9gdvEMHGY7ZpOJ5GQ384pn0VRRT29oiIB+TGcPo+KWHKTYEimZUnxazi1VVfH5
      fKiqetbSX5blUWMYDAasVut59TWcKYQQvPb6a4SjASKRMK4EB5FIhFAwzMKpc9ldv4/Slj0c
      7DlEh9oRUzMESFEJYT8mUYVJjzuw/JKPnfXbKXZNJTkxJc4E0WiUtza/SW1nDWbFQqIrkUnu
      TK6evJqC3AK2HdjKX7f8lW09W7hp/i28tPUF3j+8mdePrKVWreK9g+/So3Qe24PKoJs1av1H
      cEYS8EV9dKmxuDJd0alvqkfRDbze8xK9ejfzHIuoD9ac4PE6hlEMUFpzgN21BwF4aMFdrFx8
      BR+//m4WlcxlZuE0/B4f5eXlpCpOOv191PW3MC05n6SEREqKilFkBX/Az7NrX2BDx27mOCZT
      mDeZX2/4E9UDMd9CFI3mgXYkJB664iNs2fkBBzuO0DjcAUC2NZXvfO4/YznJgwO4k5LYcWg3
      X/jNN1lesoAZyQX0+gcZOs5j2COG6WhrJ9TjRVGUCZvpwuEwXq83ng11Nhs6IUQ8wd3hcGCx
      WOJOsEsJwWCQ119/jdTUVAb6BrG7LBgMClOmFuBKcGCzWZmVN52u3l76rD3HdGwJ5JASIyTD
      2MJCU1RKG3eg9esUZE6Op3wKIfht2WPsb9rLkpzlJLgSkCSJx99+lL92vkGH3gpeiZ2VO6hU
      D9GptaMZVZBANUbHNsDIUN1XSXeoa5SVZ07SAqZlz6C0fTuarKEMGxlQ+kEee85jKqVGFBoH
      23nrgw1MmpRJa087b+3fzIrceRSnF/DjhmeIoOKJBnn4hW8xLbmAW+evpqKlBl3o+Px+IqiU
      9dfT/9c/8l7TnlHj+wkjI2F32onqKjtbjnmTm0Pd1DbVM62ohCmFRQgheGHrG/Sqw0QlDXui
      nRvmXMUT218YNWat3sVbB99ja8VuPnvvJ7lq6YpTEp8QIh7GIYQYlbJ5JrDZbJdFnZ9QKMSt
      t97G/gP7SUp1YHNYmTwlFwCjKbZ6yrJMflIe9b7aUcSnJUUxDJlQzeNX1oiaIrze/TJNbzby
      hdu+FCtMFo2g6AamJs0gEo1QeaSSp3c8SY+1I26mDCX7CXF6cV6a6QT9XkCiLZFEWwLoEsgC
      b8CDIgyohrHnPCYDRNFYX7v1pOOv1b/P1MZaUgwuOtSB+PGq/kaqNv3u5AkKDVt07I2fjuD7
      f3mMwsScUQkzfi3EHza+xA+Lvhk/VpJeQDAc5O7rbiMvK4dDFWU8uf2lk/wDR0QH5rCBv7y+
      FpvJwuwZs05JlCN6/4jH9kwxUu/zckBSUhLRaJS9e/fgSLSQkuYek/ENkhKLnDz+J3EsqR+d
      uPpzEiQo8x2gu7ebnKwc6rtrcSspfOq6z2A0Gvn5xh/HiP8cIzWawY0Lb+axtx9BGGO00ZXY
      FmOGcXBaZokIKkEiWPWJ6dl1wQ7q2sd/0Ir+eir7G4DYqiMLCbNi5CMrb42fI0kS//7gF+N/
      67rOs5vXnkT8I9DQKfM28vs/P0P+5Hy++k9fHtf6cq5SIy8X4ocYAf/17fXMmF9INBLFaBz7
      3aQlpyL3KujWY+9HCiqxhBJAjipkR/NpNTfGie146AadAU8/OVk5rJhxJX9tfoM/bPo9aa4M
      BsXASeefKRSvAVlT0E0aa2bfTkdvO3X+mjhlC4OAU8QanPburEHvYUg/u5DkEQhgunsy9868
      gUTJzuyEQh795LeZP2POqPNGkpqFELy6+S3eqNoy6ncTBpYrxSRgQ5IkesQwpeFa9tdX4POP
      HV0oSRKyLMd1/zNdAQwGw4QZ4Eh5OV0dowWCEILa3btorqpkaHDwjOZwOqiurqalvRFXghM1
      quFw2sc8T9d0xAn+H2HRYvsAYhvRAXr5bMkXWGhfhuIzHqMzAXMdC8hIyeDd0k0Mez0IYKf/
      A17vfImw4dylo0pGiaxAHnOVxSRYEvjJ+987rfFP2zCtodPP2ZUVScLO4FF9r3GonX+5/kHc
      mp3UlBQWzpo/ru7u8Xr4yRtPnCT9bZiYNWsWd+TcxnNv/4WKaCtOLHx89Z3jJleMEPyZ6P3H
      hzlMNL2xs6OdnS8/T47fg/qlr9FcXkagtgqjwUB6bQWBSITww/9K4gRqoZ4phBCU7i4lMclF
      U30rWTljJ51Ho7FCwwbNSJTjvOQniEuf3cOrNS/xX7d8i4dMn+VgzQHKOw8zJaWE9KR0Htv8
      CC16I7YyB1Hbufe2A6iWKE2TamjSajm4dzea5fTM2RfFPue2J/CZuXeiIHN10SJ+vf5PpKWn
      kexOPsmZIoSgs6szVtdFkrm2aNlJ4wkEDpON61eupiSnCCsmVmbOY+b0meMykyRJ2Gy2eFzQ
      RCBJEiaTCYvFgs1mmzDxCyHYvH49jlAQQ8BH2bubSHj1WWYf2EH+3m1kDfWRF/Aw/PzT9HWc
      e914BENDQyhGwfTZUzCZjFhtJ69cuq5Tsb8WK0ncP+OTuETiCSdwLKtKgj66aW5rwm63c8W8
      FXzu5n+mOLeEX5XGiB8gYPeNn2xyLiABBnHaxA8XiQHq/R1sqt3BZHMGa+avptHbzjM7XyEo
      nxyRWddUz0e//zlu/a8HuPVbD/LikY0nnTNMkFcPbMTj8fCpu+5noXsqH7ntLooKC085j5Eg
      tREr0Kkw4j12OByjwqkninse+ASL//GL9NhcZG/dQG40iBWBWxzVqYGsnnaa62pPa9yJQlVV
      Ojo70ISKqmoYxtH9O9t6ueXmO1iyZCkzi2bhDJ+wguqjSykYdCNGxcThssNs37cNXdfRdY2o
      fvFrsE4EF81D0+zvxq9EcLsSCYgIzeEevvHaz/n2Uz8ZZZ58euOLdKlDtHg6USKCZMk5pjBp
      jHTzuR9+ha7OLn7xjR9RUlzyoXMYkegTdeGfaTK7JEl0dbTTUVlBcdBDnj526HV7WhYFM2ae
      0T0+DB6Ph03vvM3MucV0d/SSlp485nk2i53k5Nhve2t308UJK5LMqD1l1BhhMDCAwazwVPmv
      +d4z36GhtQGT7/KofDGuI+x8wo4Zg6TwP3f9C1lpmTy/4w10BE7FxsGOKgrNk5icV4CiKGQm
      pCH7NT625FY+du1d5CjJVHTUERAn6JQS9Osegq3DLF+4BJfLNeH5jPQZ+zCPrcViOWOvbmJS
      Eml5edR4/aQ0VI+yLmpA07R5TLr/IdKys89o/FNB13V27PqApDQnNrsVr8eHLElYrKNXMSEE
      QpPJmpRLW2cbT+3/NRHTCfkgikCOyAjjUS6QoKmrgfzEySzJWM57PZvY59lFxDp+HsmlhAsa
      nWXGiFO2cP+y27lz1RrSUtP44o/+gzSbm57AIN+47fM0tjfz3XWPIRtkbl59IymJyXxs9Z0U
      TylGkiRmTptBGJUXS9+iWe9FRqLAkkFbqI8wUaqHm9m2dRt33HHHhOY0wvwTITozSAwAACAA
      SURBVOyz9eoODw5iM5vpXLSCjD3bMCPoTJmEtuIaZt9653kJmWhtbaWmtoa+wW40TUdVVZLc
      Cdgdo2uvCl3Q1zPE5JxptHW08eg7PyNgPdnaJ2kS4gSv6qCpnz+U/45CWzGaQT2/+v45xgVl
      gDBR8o1pPPyRT2IymRBC8MhXv8+zb72MkOCGFauxWCx85NrbycyMtU166uU/cdXC5fGOirIs
      88n7HqChr5W2mvfQJJ10ezJLMmbyZtM2FFmeUFeZEYyoQSNq13gwGo1nHdCWlpFB2j33omka
      DatvQu3pJnvOPJynsVqdDsLhMH9Z+xcyspOQZYX8oky8w/6TTJ+6rtPVMsDSRVdSW1fLG/tf
      pT+xZ8wxdauGMmREM+qjnGRRU4Qjavlox9llgAvKAPOTirlm9hXxgLURD+qn7rwfSZL485sv
      8sGhXTz6lR/EpeHnH/gsVqsVWZYZHBokEomSnpbGVz/xBfp+1ker2sfO/gocTgc/vOff2b53
      FwsXLjyteVmt1niK5FgYCWw7V1AUhSklU6Fk6jkb80S0d7TzwgvPE1FDFE9fgCzLRCJRxnIK
      HSlv4KZrb8PtdvP2rvW0u5rGH1gC3a4iBwzozkun5dSZ4oIxQJqcwGdW3cu1q689SZWQZRlV
      VXn/8C4+dt2dWCwWdh7cgwQcrqvkmff/wh0Lryc7OYNdtQf40l2fYXJuAT/66v8y7PXws7W/
      YU/jIdJdKTz40fsZGBiIt8CZCGRZxmq14vV6x1RDRnqQXUyMdL+cCNrb23n+hedIcNuYt2jR
      sX5YBgVVHW3yDQXD5GUV4na7AXA4HeA5achjECD7DWiJl07nzbPBBfuqn1x215jEH5+IwcCT
      X/95/Pf6tkYKM/MwKAq92jBPlr4cP7filzX87BPfZO7sObjdbn755e8zMDjAzr2lVFRVcdP1
      N5z2/EwmE4qiXJQKDBPB6ewPtu/YRnqWm6Kp+SiG45jm+Fieo4iEIxTmFcf/nZEwCVoYV5WR
      fQY0x+Wl558KF8QMWujI4sGP3P+hhHX87/ev+QhL5y1mXuHMURXrAFoCPbz0wTra2tsIhoJI
      kkSyO5k1191EanrqGVV4GKniAJzkF7gUanmeTsJ/KBTCZrdSU9kwysknKzK6po96tkhYxe0+
      ZhI1yOPHeUlhORZWbDw/mXMXAxeEAa6bveK0iWgkPudQZRnSGOLm5cqN3P79T/PC67FyiSOb
      5Jkl0894niN9u0Y6uY9Iy0stoWUETU1NtLS0nHQ8Eo5gd1jJL8wZpTbFcnFHm3vNFhNd3V3x
      Z+3q6UTSTnjfOkhBGcOQEd1+YfsqnG+c9y8rIXHLkuvO6FpZlrnuqtVYpLGlUkAPk56exqHK
      w3ErztY9OyivKD+zuR7dlNvtdpKSkuLe34ut/48FTdN4//0t8VVrBJIkkZiURNmBIwQDoZN+
      M5lGv0tngp3G9kr27d/Hk089iVEzkt8xFUOPGWvAzhLbCj6d/898/cr/5bbZd+P0J54quPKy
      w3n/smaMJJymmU8IQV19HVOKpsQ6wMtG/NrJwVQ6gkHfMDdfHdP5dV3npR1vkulKY8H8idcJ
      GguyLJOYmHjRO0qOhZF+VzfceOOYJt/0tHQ6ulpIn3Ssxn5NVSMpqUk4Exwnne9KdOAdGOYT
      //AJNE1jyZKlNDU3keB04e3pxuZwIBuNHOjYS1hcHg6uieK8M4CKOkpFmQgkSWJK0RR0XedP
      b7/EoDZ29KkuCXbt3c0dq9Zgt9vp6uqiuqOBuo5GDhw+yPw5885q7iPh0pcKRixB7e3t7Nq1
      i7vvvnvMd5qSkjLK2uMZ9iFpCg21LcxZMG3UuUIIyg9Us2jeFfH4po6WZvwdHSiv/JjsaJAo
      EusTE2mc50c4/obEPxdABVLR+fRj/85P//DL0742GAxyoKli3N8VZA711vAvv/hvyivL+Y8n
      vkuPPkynPsSzb718wfuAnU94PB6Gh4fYvmMbhysOMGv2rHEFSn5+PlOmTo7r/CYc3HPXfaSl
      pcXTHiHGUFWHGrjumjUUFRXFM+PqdmyjonQXiWoEBVAlGXX+3KPJJX9buCDirT3Ux6v7N8Vb
      2EwUdrud3/7bT1mYOfbGVkOnUwyxte0An/7V19jVF2MWGYmyjhq27tx+2VdjHmmw8cILz7Nv
      3356h9oxGowUTi4c99msVitXLlnNcG8Io+5k6eIrEEJgkm1EI8csZLIsk5WVTUZ6BjW1x2ou
      SYlJ3P35L3Jg/goqFDNGoSMdOoh0itTCyxUXbH3vUz1U1hyhobFxQjV4hoeHCQaDGAwG7l92
      +ynPFQgGxDE1SUfQrPXy6oY3LnsGMBgMeDweNE1n7/49JCUn4AsN8fbm12hoqB/3usTERFat
      vI45s+bRVt/Ii1//PiXFJQSDo/dS0XCU6poqVC2CJEn0tbVh2/AGnrYW8u1WpmthWmUTPlN4
      wtXWLidcQAVX8G+//19u/smnuPc7D/OnN186JSOEQiGaW5qx2WxMzsrHdJpBJrokqB1sof4U
      RHI5YMQcu3z5cnRNR42q5BdmY7Vaycr68MjR9zZs4qmvfxdTgpPUtDQMHAvp0DQNj8dHsjuV
      aSUzAOje8QFThnrQnvolSTvfQwKK9DBFHv2k9kJ/C7hgDCCATnUQDZ3DfXV8Z/1j/OAPj4yr
      p3t9Pn7/zNMMDQ3h8/nQzkCSK0JmePhUfv3LAykpKaSkpBCNRPEMe+np6iPsY0JJOUOlZZTs
      bKR/dxk+r5fhnmF0TWegb4iOlj5mzphFRkZGPNZpoK+PGtmEJxCkXYcjsgkBTA5EUXqN8Lez
      rQIuYkIMwJ/2rePu//k0b297B13XR6krLpeLj97zUdxuN8+89zKadPrip1p08NMXfkVP7/il
      8S4HCCEwmUzYHQ66O/pxJTiwuxVq6qo/9FrZaEAzGgjOyuPN7/6cmk3b6OsbJCulkNtuupuS
      ktGJQwYExXqEQj3CNC1MkR7hFYORf7T42FXTTvPuEKFz07H23CAinRVTXpSEmOPRGxxkY9lW
      1r6zjufefQVP/xCLZy3AarXS2tHGD154lHcaS894fH80SPn+Q0iqINWdctn16A0Ggzz/0p+p
      azhCSXEJBqNMMBgiKTmBwf4B8nImn9K83KeFqaqqQjcqhAwys1YuZ/6iKwh4fSS6k5Blmc6u
      TsxmMwcrD7DuyA56pCB5fg0j4JUknjRFOSJ50BF49RA2yYwj7eLGPUtBGbVLpqHSS39nGFPY
      hNl9+pv0S8LFqaHTHumDCDT2xcSLruv88JXHqRhuPKuxPQTZ6iln/xu13FdTxX988auXZLDb
      WGhtbaWuvpahoUEKpuTQP9hDQU4xUTVENBrCZJM5eHgfc0/RHCQ9K5PqW0zMcueRJWXQjZdN
      WzZx39330dzaxDM7fkdzqJGF1qU0tjcyaOujM0uhYNjI7HCEdQYTpVL7qDGHvWEywmaE+QJu
      igVIwwqBIY2+7hADkQD+kYoVKtgGzCT029EToxy13UK3AdLVcUs5wiXCAMejpa893lzu9iXX
      U7HxN+dk3AAR3mksZdY7b7P6ylWXRTGrPXt2kzk5iWVXLcDn9ZObMYW83HwASg++T1pGMvXV
      1UwpnDoqJGIkIK6usZbugR4MuoED6m5qwg58Ng9Gj4VDv9hPd3JbLLXRAnvEDsg8du8/Fhvx
      1wQ5JJ/cu61P9ZFQaSF9pumCBMZpDUZaOj306J5xC6K1h4cYrAyQZUgkKcdIS5cHfyRCiTMJ
      2XUZMUA0EuGJ55/iusVXk+oaO3H7TCAQtIZ7+Y9Xf8KfUjOYN/fsvMQXAlOnTqWsej/F02KF
      a9EE1TXVdPW1YnfGNsA5BZkcOnyQhQsWYTabEULw7oa3Ma57mQOJKgeLI4jUGAH4jDGDQNQV
      ooeuY3m9YyCapHFEDowqWzkCIwqyIiHCEtIFYACDSUJHjEv8EOtL7SFIQA1DY8wBC1BVLpg+
      NwnJNvY8Lx0//1HUetpIcblJS0+nOLcQm3R65UdOBR2BEcN5aYl0riGEIHi0H7IQAq/Hj8Pu
      IiszC6fLSnJqLAbIaDSg2CPsOxjbJ4VDIdq3f4A9GmbAKhCmMT68BPKHOLVC/TphxjZTq0In
      KcWMospIofNMQgLau71068MTOl1FjxM/wLAWZKBp/PD4S44BIkLlye0vMewZZu+hfUTEOUy7
      E5DuTMaZcH5ycM8lhBDs3buHhEQnw30hclKLyUjPYMvWdzFZjHg9McefJEl4Br1kpucghOC9
      v67n2vZaek06nWnjmEckTtn2CsAkK2Q7EpmVmU6hK5kk7DgwoyAzNTUNk1lGd8VSI884OjQk
      QZ8BBg3j+xh6DfSfZgTBiWgZGEZ4xyb1S04FAmgc7uArT/4v7f1dqOfI8LwqdyEPXXcfj7/2
      NM2tLcyYeuZ5AxcCsixz370fIxwOk5qaGneIrbzianbv24k7zUkkEkVRZLweP73d3fRs3UJ0
      +/t0yEYOJxiJOMdZ6XQw+BSiDnVcNUhJgMxEC8Kq48RERtgMUTlmdjQJdEdMqgqDjjJgREs+
      vSQk4ZVpq/PT4/MDgmSznfxCJyRqaN0KQoCSqCOlqsySU9lX1TnuivRhCIoIfc1hEkwWTHk6
      RGQw6WAWlyYDABzo+XAb94lwShZsiiXmU5AgqEdQkFg6eS7f/8zX2XV4L34RZtHcBedhxuce
      CQmjq7L5/X72H9qDyWLEZU0lOBwiPT2dFUum0vnUr5Drq0mXZKZoYRp8MpWC0amLOri7DdzU
      qDHL56eu0cgLk00EkqPo1hNEsCyQo3Jc7xZmAeaThZHuUpE9BpTBWJCdljhOQ4ujEEEJQjJN
      1V46o8fUmo7wMKFKFbPJQFfEAwgSZTsuoxl/1HvGxD+ChsEBBIKEbisBIqTZnOTMtVy6DHC6
      mJVaxBNf+BHupCRefn0tstXIslkLSXYnY7PZ0HWd595/FWNAcPDwIVKTU5gzZ85lYxJVVZXh
      4WFWXnENCQkJBAMBWupqyc/L58hLz5LSVItLjzIgKexVbHQmpYLeMTq3V4K5PYKlvljZwjmh
      MIVVUZpMBp4vMeJJPUq8uoQcVtASJibVdZcaM1NqEsqQMdaL1zG2+XGoSaXfE8Q3Rn7HAH6O
      b0c9qPsZDJ+bSuQjjDx4tCd1W2AQa0UaUigUEiMu9RfeeYUX330tdsU5CiJLMbvY01tzzGZ7
      FAoySZKdIeEftWk5E9xctIJlhfOo6WvGE/DymRs+xsH6SiRNcO8td8f06UP7+Oxv/4sgEdKl
      WIue/3v42yyYfelbg46HEALP8DCBQIC6P/wWZ38vWf1dmI9TxHWgX1LYlWxkV56EJ/mY9DQG
      ZP7hoCDPr+GRZBxC0OCDzv0DeFLNmPwabbMSaLlWRljO7LvIPgMoYlRvgdjkoe1giBbf+S8D
      P1GMWgGumrOAkuy0c3oDIQQ3NbXR1tfD1iMHaBzsIkyUq1Pn8vA9nySqqzz026/hP7HU4QSx
      KmchSBLf2fA4VtmMIivcs2IN9910V/wcTdP447oX40zYKYZwCwdbt21j3sw5l1TSy4dh51/X
      k/DKn9DtTtIiYSaFTk4WkoFUoXFNn862gtFWNF0RdBgVEiTI1KPs9ipE3u/AYDGgmiw0rnSh
      6woct0k29JoQCgijhu7QPrwihA66eQzm0STOpU3jbKEgn38VSJIkCgpyKCjIYcXC+fR1D+Gy
      ppDsjnUSzEhI4Ff3f5tvrv05rcGxq5GNh2Sji8GhQd737kNH4FbMLMuczdSCWJmPjo4OJk2a
      RG9/H0anhTWOK/H6ffT39WEUBo401dDb20t6evr5ePTzgsI5c2gf6oftm8kdg/iPR4tiIq3H
      gNxroCdBxywEWb0yVw0GcaIjgOZCM40FmXhyDERSYhJbGZKRQ4DfAAg0l4ocVGLm04ByysR4
      ZeBows1Y3leDILPQirFVpsHTf2Yv4BzCiHJh9wD9PYMEPRqZKQ7qmo5gtzjJzc1FURQWZs+g
      tfb0GMCqG1lcMp2Ppl3Ld9c/TXd0kBZfF83NzSQkJGC329laup2Fs+fzf//6XSCWYPLs2heY
      O20Wj778JE6n83w86nlDelY2KffeT3nJdAYe/zHJ+tgitV9ScOsaX2kO0y0pVJtsmHOzcQa6
      seAnjESjbKIiRyeQLDESUSYHYm2QxAmbYhGV0U06iscAZh3Fb0BzHd0zCDCGTExPnEVE0mgw
      V6NJY+8fFLcgw2phaL8dtzOJ+RnT6PUOcKC3mqHo2TVemSjScR3dE0gXlgGS05JIdGv49T4y
      cpJQoypvbXoFq9VCtjmBdBLoFsMTLrqkShpXL15MJBzBIORYc7b+Op5e+2dcG5ysWrKSp974
      M0IXXLX8SiBW4/OT9z2AEILfTH/ktPoKXypQFIVZ8+bzwao1uN59A+MYhvhu2YBfVqjJyMXj
      cOCeP5OU7AzCoQgvP7sR+6ZDBBdlMyMtl32hfRgiRhJJpD88gO4+uba/UHSMvRaEUedjkx8k
      MBhgV8d2BsL9zEicxafveRhFUfif5/+bsO1DWhQZBDeVLOfhez5N5qRMVFXlnm9/hqGB888A
      CjJhVIaOboYvKANIkjSqMUPAH8IiJ5DsTCY3L8KP5/0H/T4P3173KB711M4PM0bWzFqOwaAA
      JiYnZtLk7WJJ1izaOrvoHaplb2cld8y+dsyN7kjJk8sVsiyTOXc+3e+tJ3uMfgPTtDDb5yxi
      0rUrSD/aAlbogpBPwzFtCsOqTubquZisJtK8aUSjKkUl+bxSuo4u0X6SEBKKQFIlZubO5fpl
      N6DrOq0vttBj6SAQCbBp50YGgwP0WjtPOW8lauDO9Hu59iPXYbFYOFRVxuHqChIiZmY48qnw
      NeHAjAUTAoGXEJGzNIFC7HHsWHBiwcuxyhYXzQwqhKC1uZNlC6/kQMVuCotzGer1s3z+Em5r
      Wc2f960bdX6K0cXDK24n0e5EUWSs1liLT1XV6O7o5eNL15CaOolfbHiGYSnI6tkruG3p9cyZ
      Pn7y+OUOLRgYVwXSAcnljCXGR2PVJCRZwmFzcc1NN7IuGqHb38vOwZ1ImoTbk8rUGYVcVbyC
      DZWbGHINjI4TMAlsORZuXHhTvFrGfdd9nJZ1jSyffQVFGcVUtJZhq3MQkMeR5ALm2Oaz5rpb
      kCSJtzdv5MUP3mB7bxl5cgp9wksSdsIiSp/kBcCFFRMKPs4ufMWOBRMKnQyNOn7RGECSJLIy
      M/EHfBQW5yJ0QX//II1NDbxXsROAwoRsZqUV4TDamJmXx+QpOaPGCPiDeAfCTM6ezrRp03h2
      3Uuo0Sh//PpjZKSl/00QvhCCtrZWLJZYheykpKR4iRnR3Yn1BPVHI2b6VwD7voMEi2aRnVVA
      U0cNCW47w/5+cpR81qy5ldL920nzp9Nj7cJrGsbvDzIpPY0lnsW807AZDAIhjRiEJBYXXMHU
      ycfKqqSlpvHDT/wsvpLm5OSwaOpifrX5URq8tSebUSWo89XQ2dlJVlYWS+Yv4tfvPQdAs94H
      xDp+Hu/08hDEjhm7MMeaaiMIEkWcZvyFT4RwSyfXRLqojjCrxY7NamcgOITRaGBycRY79+6m
      PzyMBSPL3NO5Yv58FEXB6hytrgghUIMyN1y7Jk7o9918N3dcs+akammXK4QQ7Ni1FU0OIogR
      vd8bQJIljIoJT2sdssGEU1OxC50hs43wQ19ACwRQD+2l6LZ7mJRfQHdXF6gGdF3Hneqi/Mh+
      Vq24gZXma6j9fQMDjgGWNQr8xiOEJheSkuQGp45mjTm4kMAecbJq/qpR8xtLjUx2p/DlG/6d
      t//vN9Tt344/VaZ9mQndpIMBAvgxm2NlMt1Jbj5x5V18/43H8YrgcePG/i8LCV0S+AljkYzI
      QgIJUnDQh28UE8hIGI96/VxYUdGRjh6PouGVQifVmIUTMsJ8gWF8wQuXQxsORrFZnUQ0H7Is
      Mzzs5ZXtm/n40ttYlbuAGdMLcae5sNhMR3X9YxBCoEeMZGflxBlAluVLopDtuYIkSTQ3N6MT
      QjEoOF12HC47DqcNq91MYkE2w7Nm0D5tGnX2BLoTk1l4y51MKppC+tIrcCYlMdDby/7Hf870
      62+hrbUds82A0WRgsN9DeloGS5cuY7p7Fr7yI/zV18vkrMlsLduKxzEUU4EkICqRL03mpmW3
      xN+1EAKfz4fX6yUYCmKzHus4YzabmX7VMjz760l//gAZ+6Pk7ggxMMlOKE0jNBhmXmGsHe60
      whIcmomKuiqMGJCQUNGZRCJmyYgRhRBRVHSikkYUDROGUeHRCjK5JBMWKk7JQh8+wkQJECFA
      BE0IJkmJeESQqDTahHtRGSAaDePxDWK1x5w1vuEAJalFZKQmkZ6VgCPhhDY+QqCpGv19Q3S3
      99HW0k5+fgE2m22s4f8m4G1uxvX074gcqiQ8c9pJtT1NZhM2hw0pwUVa0UyyMrNPUv2aOjuZ
      t2Iludn5tLa0EVFDYIhy8NB+MtOzyc3Nw148jcc3PUu3vQafyYut10mqKYWAN4xzIIE+cw/O
      qAuzbEHTNF7Z/jJP7HyMDTVvsat+B75+PxkJk7BarOi6TiQSYUf9Hjq9fTh7wwRtBiytGi0O
      M3V9DaRZJpGflYskSdQ01LGu5n0A0nBhx0w7A/gI48KKgoyKHpf4EVTSSCAoIlgkI+m4CBEl
      isqgFDOejKwNspBIwkZAiuCTTt5HXFQVyO4cTbgp6UmknMInJYRg1wcHyc0p4Mplq0lLO7de
      60sRFqcTtx6lJ6cAp2NsRh/uCzBnxpJ4Qd/jceDwAchOxuf34XQ4WbLgChoaG2hsrSZ3cial
      Bz4gzZ2N1e7AowdJ9Uxj5YzFWKdY8A2FsducvFu+iRwtj46WTp7d9UeEU0ezRhmpsDLEAG92
      v8KGN94kWUllODSEwWDAmzwMn7RS1ZuAbtOoP+ylZ6ATfUDnp2/8lszkdIoLp7BwxjzM64yE
      idJAT1ztAujBgwEZJ5a46VJHMICPZMmJRRiIShoKMi7JhgEFD0HcOJCRUCWNvlM0dr8sguGE
      EPR2D6AoMteuvp5pl2gos6ZpaJp2ztQwIQSRlkYEEHA4Gctl5x32M2v6AhITEzlcdhCjwczU
      qVPj4R0JrgQiwhMvMS/LMkWFRaQkp3CgvJQkZxpCh+QEN6uy5nPzslUYJAPDvRFKimbQ29uD
      V3jpNnVQ6T+ESNPH9dNEzRG6aIcTtmC6SUfyK6Qm2OkZ8GLBiFFSSHTGol0lSWKqK5dDnqM1
      nE4YX0UnRBQThrhJ9P+1d95xclxVvv/equocZqYnaoI0GmmUw0iyLEuyZclJOCdszNrYa8zy
      sAEDH1hYwlv27fLWhrfwWFjMsgu7S7ZZbIztBzbCQZZzkKycc5o83dO5u6ru+6N6WtPTPUlx
      Wp7v56OPrVZV9+2ue24495zfsf6eokr4iJHChspR2UOUJFXCb+0RpBxWTaQogmCikTh7dx4g
      1Bln6pTmc92cQemvJB2JROju6jolZbp0Ok3o5ecRgKgsnB5q6BKnw8nRo0dxOd1MmzYtJ7bJ
      MAyE7shTwygpKaG6vJ6unnYWtCykurqa+2/9KNFQDFVTOHbsKIZh0NKygCbbVEybYXl1TsKx
      ZkrJzl09OBJ2qvHjw8Vl0y+isrISgPraOj506Q2oQ3THBGmcaJRgzYKKFHhxsk0eo1WGOEYQ
      p7BTI0roJY6OMSIpnTE/A0gp2bZpF9KEGdNnjenDq762SSk5eOAAdfX1mKZJJBympLT0pN4v
      fcEyxHOPk9Lz42+klNhVF06nk+rq6oIzz7y584ETFWb2799Hb6SXYE8Px9uOsXTJ8mz9A7/P
      T/uxHkI9YVJ6nC1bN1NWVoaq2BBpBVkowG0kOC1PztuxAwA4pMb0iVOzbVJVlWmTpqIiKMvM
      c2l0QuSeKPeSwIZKQHpICp0oCRQh0DEow8NxgpiYVOBDAnGGr1Y/5g1ACEF5ZRmhzgQzps8c
      /oYxgBCC2XOsiu+GrtPb23tSBiCEwFddw0HNiRnInQGklER6Usye0ZLtwFLKbMHvZDJJOBLG
      7/OzYetGKkoDTKyfiKqpdPQcw2YXXHrxKmpqJmTfs6amhpb5C+lNtCF1lfq6Bvbt28fC2QvZ
      v3k3Qa1z8DKofev2zH9FRMWMQzJuoAABm4do2tqEJoXOI3/+BWkMrrnkSqs8lctDOb7sQZUD
      G1X4iZPKOblVpMAuNLw4kZA9MQ4SxYGGDycObJnzguENICcf4HjHQVq7Do/k2ZxVopE4+3Yc
      5SN33lOUh1vxePykBbl0Xc+oakve2PAybocXl8ODomhMb56By+XinU3reWHjq+w6tp/drfvx
      Ob3E9QQ98V6q8HNAdtDsreeRTz9EdVU1NpuN7Tu2MrlxSp4HLZVKse6Vl/F6fNTW1nLo0CGq
      qqp48cUXcFQ6eKXjRa5uvIHW5FHeDL7GFMc0ZpTP4s2Nb7GpdR/xRBqbXaUzFsWPi04ZxhSS
      SumjU+T67jVULqybg8NmZ8/R/RxNd2ViVE/gwYFXOmgTlneyCj/tmTKWKicy1pzYqCdAt4xg
      YKIJlRhJ4gyd1DPmZwCArs4e2tvaSSQSRafsBpxSmzVNw+/3Y5omb27fzo2XXkNd9QQ0zUZr
      ZxvffeLfWbPrtZykouOp7uz/O7FZXhM9jInE4XBgGAaVFdUF3cd2u53LVl3OwUMH6Ql2U1tb
      i8frYdmy5cycOZM79A9jt9sxTZOWNxaiqSozZ8/hF2ue4UAk87mZg1yXtGWT77uJUkspRzmR
      DKNj8NrRjUN+/yhJvMJJOV4c2HKCJfvLpKgoHKGbRCYKVSAox0sJbjoIDyqpMuYNwDBMejrC
      XH/djUUhZnWmOHT0MP+9+U88tvk5NBRcwo6KMqxcSN+IaxMa6ZS1JFBVdUgXshCCmuoagj09
      tLYdo9k3ndmzZyOEyBbdC3Z3kXrlJWpWX4vT6aTUkev6cWLD6JdUI4UsUwye0AAAIABJREFU
      qDE0EgxpEBQxqxMPsgCwoZJEz3Z8iUQAEZKUSbflCi1wb44BJBLDr5nOJrFognjI4O477y2q
      rK3TiZSSjs5Ovv34j4hL6/kkgahMUjHQ3zgAN/bsOviKaUsJlI1caMzpdNIyhHhYeWUVK7/0
      NQA27dhITAlmtwCl0o0EQuJERG9fSMJosaOhC3NIUawKfBiYWQURFYU2TgwMzgIxQH3kGEBl
      2QS2bNuIqinY7BoVlYFRN/h0IKUkHIpQ7q9n+aK556QNZ4tUKsXRw4dpbMoXuZVS8sJb6/jS
      Lx4iZBRKDh96PxQnTTleYqT42can2d96iNVLLsPv9rJkzqK8gzPDMHh703oOtR/ligtXECgb
      /vlLKTmwdi09bRHcwkFzVTk7WjuyS5E++pZoXhyjiuwcquOD1dlVBJ3k/j4KIrufMJCDfm6O
      AXg8Ho70hPje2p/jU1wsnjSTi2e0MLVpUjYWJxQME43EKAuU4HKfmSVJd2eIidXNTJs2ffiL
      BxAOh3G73Tn1cccyNpuNSZMnF9zcp9Npvvf0T/I6vwONQHaaF4NGRkokYRmnVLhJY7CpbRfr
      nrLW3CWKmx/f/y1aZs/LXv8fT/2Sf1rzE0wkT771HJfMWMxNK66msrwyz9OkqipCCOLxOO8c
      3EvD3BIaVImMCyrafUTNJD1Ec2y0h6gV2YkjTyRhMAxMtEFcTw6pUSLclppEP8LEKeXE6x4c
      HKNwfkmOAQghuHHlNfzktce5YsYyls5YxFd/+20Cdh/1ZdahRXu4h/2xNpq8NXzx5nsIlJUU
      fONTwWX3nVTnB4ouxVEIMahna/2W99jena+O7ZcujotggTvySQodH040VDoJZ18PmTG+9POH
      +MC8Fayav5z5s+YSioWzo+bbx7ey6fhOfvXSk6AJLp5+ASvnLeNwxzF++tJvqfAHuPnC1bTt
      2c2kSJCDfp3kPpUNx49gIlGEoAIvYRI54c1xmaJC+EZsAAAmJl6cRPq5Q8vxYmDSQzRvaeXG
      QXe/8Ide4vhxZUMp+pPjBgXLwv/hP77NzmP7+NlXvs+d33iAd9u2F2xYk6ua/33vpzBNk2Cw
      l8qq/DWmaZqkU9YPoKgKmqaybdMeJjVMRk8ZKKpCOBbE5bHjcjtxOO0c39/DddfeMOIf6Hxl
      ++4d3Pp/788+YAGU4yNCgsQw7r3+VOIjPMQ9GiorJi/i3SNbCaVPjKY+nCRkOi+Csq8tCgoO
      VG4qr+PAzCRmq8q7e47ndEgvTgRkffle4WCCKKOhuo494SMcirQN2/5yvASJZZdDNqniFU5r
      hhmACxsObHmd3YZKDSWkMAgSI5n5LXKiQcEakeY0TuflzW/yxttvclFTC68cWF+wYUE9Sm9H
      mB379/PIuicoEx4m19XlXHPscDtuLUBloI5k1KSnK4SRhrmzW5g3bz6NkyZTW9NATUU9irTT
      09tBMBSiqbF5TFZoP530Cd/2zQCGYXD48GFKS0tJpVJ867EfsL1zPxX4cOPAjYMuIictFzmY
      /pKJZH/wKMkBqZUKAptQC25e7WjMLW3iaKITRfMS7Emx+WgrxoDlWAodBUEpHrw4aaoKcNGs
      +Tz04D8wp6aZp97587DrfD9O3DhwSA23cGATGsECnV8gKCF/SQSWARiYdBGxzhZwEieVPwMA
      JJNJDh46yL3f/wJfvvF+Nhzcxi/feXrYhparPr75kU/j93uJRmIc2t3OVVd+gIqKiiHv68Mw
      DNa89AylFT6cMkBLS8uI7itWpJTs2bOHw0cOM6VpCpFIhPLycjq6O/nhsz9nzZ7XKcVNVCYL
      jsIjRUPFLe30imGS1QdgR8U5xH0tJVMJxsKY0uCQ3jmi91QQzCpp4KdfeQSvx8tn//lr/HH3
      K8PeV4mPLiJ5B2V976kgCOClg96COyIFQRkeUuiESaCiUIkvfwYAy0/80uvreG7nq7QG2/nH
      +75MsifKxuM7hmxkXKZoP97JRbPnsX3TXu64/a5Rr8l3791FScBLIp6mvraBaDSKpmlFeQI8
      HKZpWkkhM2ZimiYTJ04kFo+zbc8OplRNYvXM5cyomMy7h7ectA8dQENBFcqok8st4SiVpCh8
      X2cyyFevf4B7rrmD37/1J9IjUL2SQHsyROh4F8vnL2HF/Iuo0kp5d98W0lLHiQ2v4iIhc2cj
      IQVObHltEUAZXlQUQsQLGkjf58ZJZZaRXlzYLEMoZABCCGY2z2BF0yK2H9zN1l3b+et7Pk3r
      waNs7xy6ZFFXtJcGVyVOxUnL/IXD/iADPxdTpaunlXRax+cp5bXXX+PQ4cM0NTWN6r2KAUVR
      cLvdCCFwu91WlpthUFNRRanXT2VZBVJKXtr6Bk5so1r398eFAx1j1BKUwxmAiaS+pJobV11D
      rCfCO4e3jPi9t3bsxRURzGiaxtKWC1k2qYWpJfWsbl7O8uZFvLTnrRzvlhcnutDzBgIBlOKm
      a0CK5GAYmERJEiOFE1thAwCrM1ZXVjGrrpmHn3yEqxespKIkwMZdWwkNIWCkY/Dawc2kEjo3
      XXrNqEfuQCDAwQNHUBSVyY1T0DQNW6Z950uu72DEYjHS6TQbt23m3n/7ax57/Wme3foyUZKk
      pUEtpSRID6vtXwhbv1j6kTKcAQDsbz/MdQsuZ/HMFl7e8DpdiZEVsgDQo0n2Ht/CyoWrqKmu
      YdrEKfz+tedY2DyPJU3zqXKVUW73YyZ0vIqTipJyGnxVzKhswo5GV9L6LBMTN/ZRK0in0IcP
      hXA5ncysmcLPnnqMz95zPz964CHu+8EXORofvPSoBC6et+Skli1CCC5Zfmn273988U988Lqb
      2b17NzabjbKysvPyVLgvjbCPgUFcCoK0MPDgwJAmYZEY+BaDkqLPFeou6Ao8FYLpCP/69M/4
      +ke/wI0LL+c7z//XsHvFPt7r3k2138+27dswDZOfP/84b+5cT3lpgAduv4+bxXWAFRBommY2
      3FwIweatW3jwh18jYiTQUNGEkhc+PRIGnQH68Hq9XLf8Kt7ZtZFgKMjSRUu4bO4y/vT2WiL6
      4B9466IPMH3y1FE1Jp1Oc/DQQbp7ukkkEvj9fpomNuLz+YjH47S2tlJVVXXeeYeklESj0WxG
      2QvvruOtI5tzrlGEQEMhSAwTSWlmQydHOBvESeHFmQkjthLKA3itnPdB9hcjmQEA2rrauW3Z
      tSxtuRCf4WDd3ndG1CYTyd6e46x5ey0/f+f3bOvah1vYefHgO6x57UXKXaU01Teiqmr24K1v
      UK2qrGTuhGm8tfM9DuudJ60bNKwBgLVWXTh9HpPrJmG32/F7/TSXNfD7954f9J4PXvABGusn
      jagRUkq27NjG1//1YVrb2vjuk//Or9b9nr079uBW7EyfNh2Px4PH42HDhg3YHfaiO/AaCl3X
      icetwWTT9i38zz9+L/8iCW7hIE4KU0jiIoVfuLChkBpmg6yhEsBLL3F6iWd84qV0EkFBoRQ3
      JjJvj6Ci4MCGLoyspyXvjxSkTJ14T4SlcxcztWEyT657lqgxshlKCssYS3HjkQ7SwiROis5E
      kJe3vcniiXOprarJu08IQe2EWhpLJnBw937a00EcWDPEYBvhwr/NCOkfiSmlZHpjM/Mqm9nU
      sbvg9Ws2rmPlRZfkvS6l5OChg6zb/CbHu9tZOX8Zi+ctxEjpfP7D93Pg0EFuu+pGgrFennrl
      Ob76+HfYfHw3t6+6kbraWjSbRjp9cpvBsYhhGKx9fR29cWtfdaT1aDaorD+msM4M+ocWhIjh
      kBrlwks3kYKPvTSTQtj/FDhGinZ6caARJZmZHRxU4CPEicqQEnAL+9AdKtOe369fw7JZF7B0
      wYU41dFl7SXR6SAMwvLQ9OGxuagurxzy3nmz52J/3o0Zk8wpbWJLcN+oNvsntZbo8150hroH
      vebFnW9wvL2VCQOsN5lMcsf/+SRdZhinsLFkagtCCFrmW6l70zMhEFJKJpRXM722iX976VF+
      +fpT3NByGfdcdTt+nz/rQix296iUkr2tB/n2S/857Lilivy9T1LoGDJGlfATIp71FPWdGgcp
      XIAkQZoKToQkREhmZUhKUAkSQ0MhSpLQCPcN2w/vZtXSFXz8yjv5x6cfIWaOblnixJbdyDb6
      JvDxiz9E/YS6Ie/xeX388MFv8s7m9bTMmMsdD93PvsixEX/mSS+mPR4Pl89dzq/ffabgD9yR
      CPKtR3/Adz799zliSu9ueY+gaZ3UTXRXc8lFy/PuDQaDSCmprq7mhsuvYU7TjOwM5PV4+foj
      D9Ma6UQ4Ve65+FZWr7yiaPcFmqZRF6g56UKLALowaaOXakrQpKWiZp16hod830Juw97MRjIg
      PXiEIyeBZTg6wt0IIbj9qpso95XxqV/83bAbYiGhRLjRUDCQ2fCGa+av5Lbrbxny3j58Xi+r
      lq4gGAoRSo5cYXpJ/byR7QEKNlwIVixYSkvdTCK9YYK9QRJmbj7Bns7DvLXxXTp7u/nzxnU8
      tuZJfvXS7xAmVLjcfHD+1Vwwf2HeKO50OrNZVBu3b2bDni3MappOdVU1r735Oh7NyaHOYzRP
      bcbUIB6KkozG2bl7Oz6vH5fLRTqdRlGUopgh/B4fj679/bAhDk5pIz6I7j5AjCTleOgmQkwM
      n9vhxUFskLzZJDqqUAb990K0h7qocpQxbdIU6qtr2b5nJ/t7jhb4XEuotgQ3dmxoQqWTCAnS
      eHHyseW38RdX3oLXMzq3t91u58W313EsOriHEiyP2rWzLuWbH/ta4VCI0SKlpLunm//z6COs
      2fYKvebg3qF6ArTJEIuba/nMqs+zcMHQh2WGYRCLx/F6PDmdORgMUlJSkjO7wAn1g66uLlKp
      FBMmTMh/07PMzl07mdw4GV3XC6Yhbtu1nVu/+wC6HLr8UCU+a608BGV46JXxEUmCBPAUjJsB
      K/m8tECo8WAIoAI/QhE89pUfUl9bz959e/nij79BW7CTNDoKCioKYeI5huXHhV21Mbm8ni9/
      6NPMnj7zpF3d3/zpP/PjNx8f9N81VP7+xs9w65U3oCinqUSSEILyQDkP3f81vhgM8uc3X+K3
      r/+BPZ0HWThxNoqism7/u1bamkyjCgVfrAxV09i8ZTPHOlupq65l9oxZeSO2qqr4ChyAlQ5Q
      WRh4X3l5eV6w2bliStMU2jva0XWdemd93sPduGMLJdKV9YiEiBfcCOuYaBmZwMFQESPq/CWD
      hAf34RS2rJjWSLBJjYRIEzbirHv3dVYpl1BdVc3SpgX82/rHhzylvXnRVTxw870Fle1Gy+Jp
      LfzkzScKfl6tvZxPXn0PN11+bfYZnNaFsxCCQFkZt3/gZm5bfROhUChb6/bZV5/noV9/n+P0
      gIQNxw7woR8+iJnxMZTg5u4F1/PgX33ytLUnEo2QTqUJBM5NZlsfQggikQgulyuv83d1d/Or
      t56mS1hrVxd2aqQ1sxkys4IW1uMc6Kp0YceTqd6uY2BKOeQSqQ8/LuKkB/Xu2FDx4KBLFs6j
      LUSfdKFdaPzHi79BGpLbr7sFr9dbsDPaUJlV3sRl85bzoStuGlH22UhYvvAi5j83jfcG1Jn2
      q24e/ZsfUlOdK5t/xnaOQoicUfoDyy+n3FfG95/+Dw63HiVlWqeTfaeUEZJs6thNIpE4bcnv
      Xo+X1nDraXmvU0FRFJqnNhcc3TxuN+U2PyXSTUroxEnhEQ7LbTlI51NRsqmOXYQpxZPNvhJY
      SxtdmoNGcbqxZze7hehTUhiNCpwVlOZGxyQUj/DIn35OR7ibRc1zsb18IqTahsoljQu5d/WH
      WTJv0WmfnR0OB/dedhufffQbOWaXNnRMaeZ93llznQghuHD+In42byHd3d28uvFNdu3azW83
      PUdbRudl3qSZOJ1Okskkw+1LTNMcdp2YTqcxTZPOrk4qykcWkn0mGOohOxwOJpfWcrTtGG7p
      oE2ECBOnDDc9xPKWQt5MmZ82Qv1yXs2s7k45XjoJYxcqVfita6TEFGT18ZPoVEofHaLwfqJP
      Z3/E3w+BKtQTieiZr/vr158iHO6lwVFJib+ET6y+i6a6RiZNnJj3mxw/fhyPx4Pf7x/VZxdi
      yZxFlNl8dKdPfD8Tk0Qy/3DurPsOhRCUl5dzw2XXYK40cT/u47sv/hQpJRUl1jQ4WOfvW9Nv
      37ONJ9Y8zodW/wWpZJKZM6xNUyQSwe12ZwVqO7s6qa6uHvMu0gtnLGDLvh3sT7Vjzyw/NFTK
      pRe3sHOEHiQSDQUPjrwyP73EKREu6iizwogFpDCyAlIDR3IBNIsaeoY4I9Ckgj7EXsIt7VQJ
      PwfoJICH9gLFDZPovL5zPY989mGaGifnOCxM02Tj9s0IBBMn1BNLxLDZT4/sZaAswKrpF/H4
      ljXZ16ZXTmZiXUPetee0ZyiKwidu/UuO9xxk47GteF2DL32SqSS/fP5nrD/yNp1dYarkRD71
      o6/REevh+nmXcdeqW7DZbQTMAGvXvUxZeRl21ca+A/u5eGn+WcNYQQjBhRdciG6a/MtzP2Vf
      qt+STUAvqnVgJRN4cWZrZ1VTgomJDRU7Gp1EOEI3FWL4EJEyvHQRwYaGPsDNqWDF3WtCoYMw
      mlTRCyTj2IRVuMKNw1LuL6S5IxXS6TTPvL6G25zX89a2Dew4sofNh3ZwtLuN9mQP37jpc7TM
      nnda92lCCD598308t20dEdMa9T12V8GB8JwPjUIIFk2dT0wJ8uzxJ5m6YwqzZswilUqxZ/8e
      GhsacblcbNi8nrU9fwYPtO2Is2rRdF44/A5J0jy68Q88uvGPaEJlfvU0drbtxxAmKxsWcf2y
      1ef6Kw5LeXk5133gGmobavn8f36DVDyBQNBBL2kMHEIjgZI5vfViZGaDo4QQCOopA6yly3Ah
      zyoKNlQE1snrQP1Mv3TRJkKU4MaHE7vQsKGiY5JCx42dNAZJdFoJ0UQl+yjsd7fErCQ/fuU3
      /PjV3+QludjRaJowsnix0TKhuob5tTN49ch7eFUXV0+/hP0HDtA0eXLOdSd9EHa6EEIwvXEG
      K2atZPOGLazZ+CyHug7yxCv/TSgc5Ik3f4tLd/OrnT8lpSat8odhjTf3byNsxHLWxyYmxyId
      pNBJS4PdocNEe8LMrJ9KoPTUXWxnEiEEEyprcCc1/rBnHUmpM0GUEiGZ3ZQm0bPJHHa0bOe1
      ZgEVF3a6ZXTIzWtFJm3QjkaERHYfUZnJOw4KK9rUjkap9NAqQkQy8UIAIeLESZFCx46GkgmX
      GAzLaByZWo+5WWnzq6fx8RvvPiNLVCEEqil4aesb/M3VH6fE5+fh3z3CtYsvz1lin3MDgBPF
      1hY2L2Ju3XzWrV9LQ3UD9179MXbu3cGfdz9Hwpc5kFHApdjY2do+oqi/YDjEE6//kYDDz6ym
      k5NaOVsIISgvKePZV59Hl1Y9rBpKSGLkSIIILBdoX6d0Y8cmNAzMIU+AbVJFEYIEOgnS1FOe
      dXn2EidMIvuLJtFJC8NShsjEFw0MayiRLhLopIYJl06iZw++qilBQ0UoCt//2N8zoTo/0vN0
      MW3SFK6es4KLL1jK6xvf4omta6h3VTGn+YTK+JgwgD4cDgeBQIBLF65kbuM8PB4PTROm8uLh
      NRhqvx/ZZdLgKaWhsoRkSCJMy79RKO6kHC8dspdd+3YzsayWxrqJ2X8bizOC1+PlhotWE++J
      8G7rNqKksKPmnJy6pC1bNA4sA3Bhx6u6UBWFpMwtI+rBQQAvDmHLnuxa6gkRIiSsQnIFfjsd
      AyklPsVVMB0zLtLYhIoT24iyzRQEqlDoIcrqacv4yDW3n/ZnkE6ns6JoQgjKMjN/TzDIs5vW
      0lI/kwtmnRBbOC2hEGeSYDDI1578EmFHYSEokVJAF+zbGub4gHQ8BUEFvqx4UrniZfmCqaRI
      0uBs5JM3PZjNyR1rSCl5/o21/PWvH4K0RMeaETyKAzsaQgp6iHJR/VxWL1jJ6otWZQ8df/7M
      Y/zjs/+Kmdkr+HDlaehU4MsJkRaZ+P7+hiAQeHBYHVzqg54rNBCgldCQifsaKn7holtGcCsO
      fv2Z7zGr+ezVe0il0+w/sI/mKc057vOxMfQPgpTSigw1Bl/qSLsJCKIZYV87araqYKnmpr7B
      Q0m3gz2hTqZOLKPTbQkxlXhLCQaDRCIRkukkE+snDvoZ5wIhBJdfdCm/qa7n0T/9DrfHzbUX
      XUFdTS12u53NO7bicjqZNW1mngHffuVNbNq3DZkyKfeX8ecdr9GTyjUAXRoowtLPtOJ4LKU1
      BSUruWhgEiOJROIQtmysflc/1bUAHjoIE8BDVKaIZFI1vZlDTq90oghIY9ItIwgEn1j5F8yc
      OuOM/G59BUIG/iZ2m43pzflL4DE9A0gpaW9v5+E//APdziEi/CQc3ZjgYNgK3b2grh5HqUCW
      6SCge4fBjo52ppVUUjFXAwETjHo+tfJzrN3yAh2JDj570+fP0rc6uxw+cpjde/fwhd8+TNg4
      MYIrCMqEB0UKREZItm9GKBSH1P++Osqy1dptqLTTm904+zOlIyMkqMDHEU7kjAjg7gtv4m/u
      enDMnM2MjVYMQiQS4bt//Ce6HUOHt4qkkimeZhlAV1ec2jpn9kkameJ1R0Ihqg7XIlwS1a2x
      butaXu1Yi9AVOjo6skXbzica6hvwuD2U/7fXcmFKHYew1uwOqRHKpEj2L0M0lGvBRJIgTXdG
      pEpg1eHtJkoKPWtEXpw5SywbKh+58Ea+cOcnz2jnT6VSaJo24mjSMWsAsViM3zz3O472HkMM
      1i9NsO/zoFcl8dcJKnZ5sdtVqqc6TxR0E1DRaMeuVVFabUc605h2kyPiAEe6D1i/gAq/+NPP
      +Nyd59csEI1GcbvdbNyxhahpqSeEiFMlLYGpeKaSet/yZyT0nTX0eeD6zgiGos5bxbfu+jKL
      5+bnfpxuRltE8awagGEYbHjvPWbPmjVk2SApJU+/9CwPv/BjbKg0tQVwujV81Sqm58RGSyQV
      jNI0pt/yQEwr81uDvpb7QIRbUjJNRQ6ySbP3OuntjLB121ZmTJ9RNNLqQxGJREin05bkfetR
      uolmK6xYqSdGViB2NEnkJbhzRnYfzpw9wUDqvVX82wPfpLlxysl/mVGg6/qoZpizagC6rvPe
      5o2ApHlqc9ZrMZBoLMYvXv0dYEl27OzpwN6jssTRgGKIbIeXTpOcoEZtJNpg+aTVNPsmb+M7
      rzzM5HenUlFSwYWNS5nZPLMoa5JJKfFkEogSyQR/3LI2Z4SPZDLHkqTx4BiVYJYTGxMoxbAC
      IHBKG90if9lkYFDnruT7D/zvs9b5wXKDjlkDcDgc3HfPvaTT6SGrqff2hmgNduZsxhrLAxi1
      SZSYihqyIYVE2qxIx1NFeq2ZwVQNdivb2B2FN99+lXlbFnH7pXcURUBdf/qCzTRNw2F3cOns
      i3i7dRt2NCrwkbLKSKNldH9GmvTuwk6SNCpKNtBOCCiTHgxh5ghTqYrGF2+5/6x2fqBgxt1Q
      jEkvkGma/Og//53vvvMrKp1eGup82CfIbF17kVCQmkTrsSMVE6P8zMik2NqcSJ+J23QzsbwR
      RVFYMnEZS+cvK6plUiKR4Es/+gfW79xEt4wihZVY48aOiTlsKdE+fP2EtVrJPXPRpEJAeGmn
      FxWFH9z5d1y27NIxecbSnzGpMbhh53rW7lmHJhSmTC3BXidzWiodJkpMRYmqSPupzwCDka5O
      oLtT9HqDbEm+x6b4ev59+7/wL//vuySTufEv6XQ6m5c81nA6nTz88a9x8YzF2ISKgoI3E58z
      0s4PkCSNgqBH5ucJ68KkmwgV+FhYNYNLFi8bdec3TZNQRhHkbDEmDSAUCeKYk2bB9AlQOmDj
      KkHtsWG6DVKNMUzf6ARRTxkF1kfe4uuPf4VHnv4+nd2WLr7NZhvTo53L5eILd32SRluVpYqM
      krOZHQlpDBKkB5VK1DMli25quWLUSe19Ok99EohnizFpAM0TplNqlqNWGXktFCnFGvW1czja
      CjgujvBm+BVe3Di4PORYI1AWoKVpNg6sEOdKfFQx8gwsiRVOPRQe1YnH6T6pPZMQAu9Zlrwc
      kwbQUN/Al6/6W+ypAXsTCWpUw/Se5VF/MATs7SosDTkWEULwoWtuJUiMDsJ0ECaNpfvpkjbq
      KKOWUtxycAdFiBheBt8z9hoxdnYcQNdH94z6ZgzTNM+q9OWYNACA6qpqbptxZ65/TYCpmoxS
      Bv6MUuWtPtdNGBXNk6cwq+qEZyZIlDI8OLBxlB5aCWEXhUdvDw58uCjDg30oB6KUJ63royjK
      qA+zToUxawBCCC6ZvwJfKveswPTpaB1OSAmUYL+HIEGEVEicva/k1F1cPveqs/Z5p4N4PM6x
      4InKjBIruC3Yr6r7YMscBxqdhDlMNy7s1BOgDE/edesPbi14f09PD9FoFNM8cSZxrh0HY9YA
      AJwOJ1dOvTp3FlBAr06gJFWUhOUJIqzQvi3FG5uOEWsbXRmgk8WhO7lv4f1MqjszKX1nCq/X
      y82LB08TNZHWkghbnjpEf6GsEDGCGdUKJ7kj9s7W/fz3M0/kvXdZWRlutzvHAAotd2Kx01vE
      YyjGtAEIIVg1/3IC5gBJE8WaCYyyFHqn4L33OtjT3YWBSTJx8sXkRowpuHPWX3Lh7CVn/rNO
      M0IIpk2YPOQ1UZKoUqGBALWUUoobl7TnKcX1JepU4KMCH+V4qcRHUqYI6VYnjsViHDp0KEe6
      UtM0Ehk3cqED0dEeZp0KY9oAwJK//ouWuxF6vmtMOiRKg45LnBiB9rR3cfS9BIkjAgrcc6qI
      lGC+tohLFlw6/MVjkEg0wmOvPTPkNQKBDZUgcY4RJEoSTSg40JhIec51Luy0yRCdhOkiQgdh
      4qRpD1ruYZfLhc1up6fnhMq0ruv8r0cepjs4cuXpM8WYNwAhBAtmLMKXLhw3REwhKk+kC6Yx
      OBjuYcP+Y+xdHya40xg6vneU+M0yHrz1c0Vbp+zHT/2St44NXc2CZhPZAAAMnElEQVTRIx2E
      RZLuTJBbGoMwCXqI5oRN94VR+0V+vFQ0ac0AQggm1NRkZU+klPzLT3/EH/a+wqvr3zhdX+uk
      KYqnqKoqlzevplDUrR6XBVPxJNCWDHO4vRcRP31f06k6iyoMoj+mafLW7g3DX4dZUKo9Rope
      Gc8udyIkqKHEyvwa4Bpt6+7I2+BKKdm5exdPbX6BmJlk65Fd53wTXBQRXkIIblh+Ew7NwTO7
      niRi783+mx6XGNIcVAokQRoRU0HlRI7AKRDRw8MG841V9hzYy+a24c8tBuuSTmyUCjcKgnZ6
      M2rVqpV7LNXsM1AQrL7gRByQVRbrEC++u47/Wvs4x9JduIQdv3L21vqDURQGAJZ/+Oql13Lx
      nBX84e1n+PPhZ0nZE6iagibUQYtLpDHYsL2NSs1L7dJT77RV7pqz6qc+nXR2d+GQtrwMsIEY
      wsSOmlN8z4MDB1o2CK4Ud6Y6e4x6AhwQmTW/sHPnhTdwy2XXZ+9t72jnQ//0AN1GvwwxRePy
      Jec+WK5oDKAPn8/H7avuYN6++Xxv7bfp7kwMW1klSpK4nsK3pxrf1FP4wSVMrphyzh/ayeJ2
      uUlmZNErpBeJVSZJYpVhlWBVExYOHEoZml0haiYIJhMkSecUywgSs1SoMTmAFbr+4YXX8fFr
      7qJ2woSc32jDjs05nR+grqSaKZObzsr3Hoqi2AMMRAjBjKaZfHDmh3E2mXjE0OHcDjSQ1tr2
      lDAEK5pXntp7nENmT5vJ0qYWK3dXROgSEbpFlB4RpYsI3USoqXNTtUyh9AKJZ6FORbM9K5o1
      GAqCOxddz1fv/ix1tbV5A0RTfWPeyfHc+uljYi9VlAYAmWIc3gB4TEodhUV1A3gpl17sUqNK
      +CkNnFreQ0BUUFlRvInzNpuNB6+/b2j5c9UKPZd2679KqcmM2gprEMlDoKDwtasf4G8/+oVB
      90XVFVX4bO5+dwmubLlk0JnUNE0OHz2S9/qZOCArWgMA8Hp8YAgcjvyHIzJ/ukSEsEjQRi+6
      cfIzgDAEt86+HW+Bck3FxMyp07l48tB12XIQ4G0SzKqpynnZLlVSGWkUt8s1aGeWUrL2nVfo
      6afVX2kvYcHMeQWvN00TKSXOAoPamTggK2oDUDI/elWNCwFMcgaoUnxUaF4aneV5FQ6VqIbS
      qxV0pw5HSSrA4lnFd/I7EFVV+fwt/wOPmt/BqmxebI4CXUKAaxK01NQSkF48OChRPEQzollP
      v74Gwyi8D4vFYnznmR/nJN4vnjxv0EIYiqKgqiqVFWenoEnRbYL7s7d1L2gSxW+yMNCAY5YO
      OFBCGqZfR9nsZ2+v5Z2QSN44fBDtsMq8xmocDcP7nx1RFwGjAr/fz90fuHfYqjXFwrSmZlpq
      Z/Dq4fdyXq8u96LWFB4dZFJwvDtMUFjRo1F5Qkh3T/dh4vF4wdlR0zR8Tg8kOrOvXTF/8OXP
      2aaoDaCrrx6sBu4qBSPzm5qlVrx09Rwbrv3VHOsM0522pNTTGPR0JalwOdAqChuBI+1knnch
      N15yC/V19WPmYZ1ORlMBkpjCtk3dhDLlb7tlhDLhyc6wpQ7voIODw+GgpXEWO947aF2reVky
      ZxRLsDNMUS+B0qYVSaiF7BgVBWTBVfBPVZixsJRZ1VW4hbVJ2xfuIhYsnFRQpzTwP6/4Bp+6
      5TM01Decn51fCJZOX5T3upnkxClYJo5KRhT2bQ1nOz9gVYORVtj0gsrpfOm2odXe5k6aiZYp
      zLFq6oXntF7bQIp2BpBSEkoGQYJUBj8JBsAuKW1WqYp7OdDbjQA80omIm0jXibWrlrbxicsf
      pKE2v5bU+cbUmvww7u6eBP6QB+GQ7H8vSkmZnVhMpzXRm3OdBwce4eSvVt3BR2/9yLBxUbdd
      dSPN9ZPxujxMaWwaU4NKURtAMGFJpov08BOZGVRo7bU8ERUOL1qNiUgJZL84LrthpzJQvG7O
      0dDU0IgTW57uf6zDpC0UpVXv5fggkqxuHOgYKEIZUVCgEIIFs+efjmafdorWAKKxKAd796Po
      GnrZ4FVR+lDdsGh2DaYu0VQFdDDKch++qUuSyWRRqsGNlobaepY3LWTdvnezynBpdDa2Hh/2
      3m7CuHEye+rZ0/c/UxTtHmDbvq2kHUkrT8A2vEdHOkxkQEd1CUyXmdf5kbCwdvGgco3nG6qq
      8o/3fZl5ZVOooYRKfDmxPwPx4KASX6ZugKSpqoE502adxRafGYrWAAzDACksecQRIhIKQgqk
      O/9BN4hGPnrVX42p9emZJlAW4LZVN9BKiA7Cg1aPtzawGjFSeHHQ6JvAjz7zTTxnMXPrTFGU
      BiClZNvxrSgxdeQhzhLmaHNYVL4Qkcz92sIQ3DzvtqKN8jwVVixcRrl96FnPCnu2vDhRknzu
      2vsoLysf8p5ioSgNQAiBy+5C6EqmRNIIMAVTqptYOnsxt066hfJkxhVnwmXVq1kwc+z4ps8m
      5WUB7rn4lmGv6yRMkBi3zLuSq5ZddhZadnYoSgMAKHWVkgnxHBFCF3hdlmR4/YQJfHD+zQTi
      FSwru5SPXPGXRZvieKoIIWiZPAu1UKn3AVw/cyV/99EvFpVS9nAU5TeRUtIaOY7h1VEiWrZe
      wFDYUw58/hNH9U6ng2pRw02Lb3lfrfsLEYqFGar/u4WDj624nU/c8pfn3TKxKA1A13U2Hd+A
      EIAY2SZYkxrBrjBl5T7sDjt6Wufmi2+juvLMFWouFi6Y1cLiylm807GdaaUTWdLcQm2gmkg8
      xsTKWi6au5iqysrzcqAoSgM41naMXhFEiWr57sxBiHrDHIgdYXL95SSTCXxuD1OmTD3DLS0O
      Ksor+MlX/5m9+/cyo3n6+2o5WHQGIKVkzZY/YtpN1N5RZBQpsLFjPR++5K73ja9/NDjsdmZN
      L/6DrdFSdKbe09PDhqPvIuIK0jW6wP6YI8JbO869Fs04Y4eiM4ANu9YTcfUidAXTNjoDqJYT
      uHj+ijPUsnGKkaJaAkkpcavW6aN0GChxFdM+iAdIgpJSkELiTLuZUTGLmy74IC7n+R/nM87I
      KSoDEELQUNeA2KaghDSMyqGD4Fb6ruLKpauprKw879x345weisoAAN7e9RbSZg5bIkmYgtmT
      51BbW3uWWjZOMVJUBiCl5GBoPxlFp4LU643UldUTT8eoq687q+0bp/goOgNQgjaagjM4KPYV
      vMZlc3HLBbdRXV19Xh7cjHN6KSovkGmatHW0YrPbkM7CHqCD4f388Jc/IB4vHNo7zjj9KSoD
      ON56nLlT5xP2BgsWzABorpjOFz7+xbNaZWSc4qWolkAup4sDOw7Q5ehCoFj7gAF2MKWsGd9Z
      rjU7TvFSNDOAlJIdO3bQ2t6KqRkoSTVnIyxMwSRzCkumLT13jRyn6CiqGaA72E3aTGG4DBRF
      njBfCReVXMLHr7n/fRXINc6pUzS9pbOzg3V7XyJdm8B06xlV+xOUuQPjXp9xRk3RGIDH4+Wu
      VXcjSqW1Ae7fcgHPHn2Kb//2WyQSg+vYjzPOQIpmCSSl5NHHHkORDpQJep4UoqmZHArvP0et
      G6dYKZoZ4PCRw4SiIVLVMSsTbMAxQAVV/M11f4vTWbhYxjjnJ331BE6WojEARShIm2kFwbn0
      3JabcMfsj1BbNR73834jmUwSjUZP2giKZgnk8/lwCCeGqSPd/YZ/CZOUJqY1Tj93jRvnnHGq
      MpZFMwN4PB7cDjdCB+24M7sE8ib9fOXmr1PiH09zHGf0FJUBVAQqsNsdKP2U3dIyjWkOnhlm
      miaxWIxYLDZoGZ9x3r8UjQEoioLD4cDskqgxG2qPDbXbhozAy2+vLXiPlBLTNBFCWJGk44dk
      4wygaPYAQgiuvPJKunu7OJY8gjflR1EVnC4nyXhy0Hs0TTuvlMzGOb0U1ZDYOKkRu+pADdsw
      kTT5pxIlwrt730HXh1eHG2ecgRSVAdjtdu7+yN14XB60djvH97eRIM4ReYD/WvMTUqnhC2Wc
      Lobad4xTPIhEIiGLqfynlJIjR47wy8d+wZGOI+iuFKbHQC9N0ehpYmXTFbjtbi5YeMEZbYdp
      mhiGMZ5sX+QUnQH0EYlEeO3113j2hWdBShqnNrLiwkuZNnUadrt9fN0/zogoWgPoIxqN0tHZ
      wfZt27n66qvPdXPGKTKK3gDGGedUKKpN8DjjnG7GDWCc9zXjBjDO+5pxAxjnfc24AYzzvmbc
      AMZ5XzNuAOO8r3lfGsCp5JCOc37xvjSAcf2gcfp43xiAYRjjI/84eZz3EWN9nV5VR1FSdZz3
      Def9DCCEyFnyjMfxj9Of894A+jAMg0QigZRyPDl+nCz/Hyj0q2qT5z7YAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total_deaths(pm)_W_map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
